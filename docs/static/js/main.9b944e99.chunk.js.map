{"version":3,"sources":["Components/Routes/Home/Home.module.less","Components/Routes/QuestList/QuestList.module.less","logo.png","Components/Header/Header.module.less","Components/Routes/Home/pay.png","Components/MissileTable/MissileTable.module.less","Components/DotTable/DotTable.module.less","Components/Routes/Unit/Unit.module.less","Components/Routes/Login/Login.module.less","Components/Routes/Quest/Quest.module.less","context/UserContext.ts","context/MediaContext.ts","Components/Header/Header.tsx","Components/Card/Card.tsx","utils.ts","consts.ts","Components/Loading/Loading.tsx","Components/Routes/Home/Home.tsx","Components/Rarity/Rarity.tsx","Components/Routes/UnitList/UnitListCard.tsx","fragments.ts","Components/Routes/Unit/types.ts","Components/Gender/Gender.tsx","Components/SkillTable/SkillTable.tsx","Components/AbilityTable/AbilityTable.tsx","Components/MissileTable/MissileTable.tsx","Components/ClassTable/ClassTable.tsx","Components/DotAnimation/DotAnimation.tsx","Components/DotTable/DotTable.tsx","Components/Routes/Unit/ConneNameInput.tsx","Components/Routes/Unit/NickNamesInput.tsx","Components/Routes/Unit/UnitSpecialtyTable.tsx","Components/Routes/Unit/Unit.tsx","Components/Routes/UnitList/UnitList.tsx","Components/Routes/QuestList/types.ts","Components/Routes/QuestList/MissionShutter.tsx","Components/TalkRow.tsx","Components/Routes/Quest/EnemyTable.tsx","Components/Routes/Quest/PreviewDot.tsx","Components/Routes/Quest/MapTable.tsx","Components/Routes/Quest/QuestTermTable.tsx","Components/Routes/Quest/Quest.tsx","Components/Routes/QuestList/QuestList.tsx","Components/Routes/ClassList/ClassList.tsx","Components/Routes/SkillList/SkillList.tsx","Components/Routes/AbilityList/AbilityList.tsx","Components/Routes/EmojiList/index.tsx","Components/Routes/Login/Login.tsx","Components/Routes/MissileList/MissileList.tsx","Components/Router.tsx","App.tsx","serviceWorker.ts","index.tsx","Components/Routes/UnitList/UnitList.module.less","Components/ClassTable/ClassTable.module.less","Components/Routes/EmojiList/index.module.less","Components/SkillTable/SkillTable.module.less","Components/AbilityTable/AbilityTable.module.less"],"names":["module","exports","createContainer","useState","localStorage","getItem","state","setState","login","token","setItem","isTabletOrMobile","useMediaQuery","query","Header","SubMenu","Item","HeaderBar","active","setActive","location","useLocation","useEffect","pathname","split","className","styles","header","to","alt","src","logo","mode","headerMenu","selectedKeys","key","title","ShadowedCard","this","props","React","Component","DefaultGetter","obj","index","toString","renderDescription","source","replace","range","min","max","length","res","gap","current","push","BASE_SERVER_URL","process","REACT_APP_SERVER","API_URL","STATIC_URL","PLAYER_DOT_URL","ENEMY_DOT_URL","BATTLE_TALK_EVENT_URL","EMOJI_URL","ICO_URL","BANNER_URL","PLAYER_STAND_CG_URL","PLAYER_HARLEM_CG_URL","MAP_IMAGE_URL","ENEMY_CHANGE_COND","0","1","2","3","4","5","BONUS_TYPE","6","7","8","9","11","fuck","Loading","arr","tip","Math","floor","random","size","style","marginTop","display","Content","Home","date","setDate","selectedDate","setSelectedDate","useQuery","gql","onCompleted","d","Posters","posterName","moment","slice","loading","data","posterRef","useRef","posterLoading","setPosterLoading","includes","format","BASE_GAME_URL","content","logoblock","topLogo","UpdateTime","fromNow","gutter","xs","md","Banners","map","bannerName","maxWidth","value","onChange","fullscreen","monthFullCellRender","first","find","p","startsWith","classNames","calendarMonthDisabled","onClick","localeData","monthsShort","disabledDate","spinning","ref","onLoad","width","beg","placement","trigger","payImage","type","role","aria-label","Rarity","rare","color","textShadow","UnitListCard","card","showUnit","setFilter","listCard","male","Number","parseInt","Kind","female","alignItems","CardID","height","Rare","Name","lg","RaceName","e","stopPropagation","AssignName","IdentityName","GenusName","Classes","IllustName","DotFragment","MissileFragment","EnemyFragment","Gender","gender","SKILL_TYPE","Init","CC","Evo","SkillConfigTableRows","config","Comment","setValue","useMutation","SkillConfigMeta","setSkillConfigMeta","editing","setEditing","focus","handleSave","a","async","variables","TypeID","Data_InfluenceType","message","success","configRowGroup","cover","colSpan","blank","target","onBlur","onPressEnter","fakeInput","small","Data_MulValue","Data_MulValue2","_HoldRatioUpperLimit","Data_MulValue3","Data_AddValue","Type_Collision","Type_CollisionState","Data_Target","_ExpressionActivate","_Expression","wordWrap","SkillTableRows","skill","showConfigs","setShowConfigs","MediaContext","useContainer","secondRow","LevelMax","ContTimeMax","WaitTime","PowerMax","icon","Fragment","SkillID","SkillName","textAlign","dangerouslySetInnerHTML","__html","Text","table","tableLayout","Cards","sort","c1","c2","marginLeft","position","Configs","SkillTable","skills","ABILITY_TYPE","AbilityConfigTableRows","AbilityConfigMeta","setAbilityConfigMeta","_InfluenceType","_Param1","_Param2","_Param3","_Param4","_InvokeType","_TargetType","_Command","_ActivateCommand","AbilityTable","ability","Type","AbilityID","AbilityName","MissileTable","missile","compact","isCompact","Property","MissileID","PatternID","Enemy","Speed","SlowTime","SlowRate","DamageArea","CLASS_TYPE","Evo2a","Evo2b","ClassTable","classData","setClassMeta","NickNames","ClassID","Explanation","AttackWait","ClassAbilityPower1","tokenSeparators","v","name","AttackAttribute","Missile","ClassAbilityConfigs","DotAnimation","dot","canvas","gif","canvasWidth","canvasHeight","top","bottom","left","right","tickNum","Length","timelines","dots","frameNum","Entries","entry","Sprites","timeline","patternPos","t","pattern","PatternNo","prevFrame","frame","Sprite","X","Y","Width","Height","OriginX","OriginY","ParsedX","ParsedY","Alpha","Pos","Scale","Time","undefined","Data","alphaPos","prevAlpha","nextAlpha","alphas","posPos","prevPos","nextPos","posesX","posesY","scalePos","prevScale","nextScale","scalesX","scalesY","forEach","generateTimelines","imageObj","Image","crossOrigin","ctx","getContext","currentTick","GIF","workers","quality","workerScript","transparent","on","blob","url","URL","createObjectURL","document","createElement","href","download","click","frameId","gifStatus","onload","imageLoop","window","requestAnimationFrame","clearRect","sprite","globalAlpha","drawImage","addFrame","copy","delay","cv","cancelAnimationFrame","render","DotTable","entryIndex","backgroundImage","backgroundPositionX","backgroundPositionY","ConneNameInput","ConneName","setCardMeta","setCardMetaLoading","NickNamesInput","UnitSpecialtyRows","UnitConfigMeta","setUnitConfigMeta","Type_Specialty","Value_Specialty","Value_Param1","Value_Param2","Value_Param3","Value_Param4","Command","UnitSpecialtyTable","configs","countMinMax","maxLevel","maxLevelUnit","mod","ceil","getStatus","BattleStyle","ranges","_Range_01","_Range_02","_Range_03","_Range_04","_Range_05","classes","_AwakePattern","findIndex","cl","splice","nearRange","Data_ExtraAwakeOrbs","JobChange","MaxLevel","HP","InitHP","MaxHP","MaxHPMod","Atk","InitAtk","MaxAtk","AtkMod","Def","InitDef","MaxDef","DefMod","Cost","CostModValue","CostDecValue","AtkArea","classDataToUnit","Unit","match","useRouter","params","currentImg","setCurrentImg","currentText","setCurrentText","avatars","setAvatars","id","fetchPolicy","refetch","Card","filter","ImageStand","container","_","isEmpty","previewContainer","outerRadioContainer","inset","radioContainer","Group","radioGroup","imgName","Button","danger","ImageCG","HarlemTextA","HarlemTextR","outerImageContainer","imageContainer","textContainer","fullScreen","ghost","shape","closeButton","text","p1","avatar","onError","HomeCooking","SellPrice","_TradePoint","MagicResistance","BonusType","get","BonusNum","BonusType2","BonusNum2","BonusType3","BonusNum3","st","rowSpan","BlockNum","Skills","skillWithType","uniqBy","Abilities","SpecialtyConfigs","Dots","sm","FILTER_TYPE","UnitList","order","sorter","setSorter","search","setSearch","filters","setFilters","setSize","scrolled","setScrolled","history","main","getElementsByTagName","handleResize","offsetWidth","offsetHeight","onresize","genSorter","cursor","getParam","keys","handleSetFilter","f","fs","cardID","modal","cards","cardA","cardB","paramA","paramB","flag","JSON","stringify","sourceValue","parsedValue","unitListContent","placeholder","event","filterContainer","closable","onClose","i","sorterBlock","shadow","listContainer","itemCount","itemSize","onScroll","scrollOffset","String","visible","destroyOnClose","getContainer","UnitListWrapper","MISSION_TYPE","Assault","Story","Emergency","Reproduce","DailyReproduce","Subjugation","DevilAdvent","Harlem","Daily","Challenge","Tutorial","Tower","Raid","MissionShutter","mission","showQuest","questID","MissionID","Mission","Quests","quest","QuestID","bind","float","Charisma","ActionPoint","TalkRow","talk","margin","FaceID","Message","EnemyConfigTableRows","EnemyConfigMeta","setEnemyConfigMeta","Type_Influence","Param_1","Param_2","Param_3","Param_4","_ExtParam","EnemyTableRows","enemies","drops","routes","expand","setExpand","Array","fill","showTable","setShowTable","routeNos","RouteNo","routeNo","route","RouteID","previewSprite","types","SkyFlag","EnemyElem","_EnemyElementName","EnemyType","_EnemyTypeName","_Attribute","join","changeCondition","Param_ChangeParam","Param_ChangeCondition","imgID","dropImg","PrizeCardID","fontSize","marginRight","zoom","verticalAlign","enemy","attackSpeed","ATTACK_RANGE","ATTACK_SPEED","getAttackSpeed","DotRate","background","TypeAttack","MagicAttack","ATTACK_POWER","ARMOR_DEFENSE","MAGIC_DEFENSE","Param_ResistanceAssassin","paddingTop","paddingBottom","Loop","EnemyTable","Quest","Map","Enemies","entries","EntryNo","Routes","mapLevel","Level","showDuplicate","setShowDuplicate","showTalk","setShowTalk","Treasure1","Treasure2","Treasure3","Treasure4","Treasure5","treasure","parsedEnemies","parseEnemy","enemyID","EnemyID","enemyGroup","ea","newEnemy","checkedChildren","unCheckedChildren","checked","QuestEventTexts","command","EntryCommand","exec","s","recordIndex","BattleTalkEvents","RecordIndex","PreviewDot","MapTable","useImage","MapName","mapImg","heartImg","nearImg","farImg","setZoom","containerRef","circle","setCircle","setRouteNos","resize","overflow","scaleX","scaleY","image","Locations","LocationNo","img","ObjectID","x","y","c","onTap","onMouseEnter","body","onMouseLeave","radius","stroke","points","strokeWidth","Option","QuestConfigTableRows","QuestConfigMeta","setQuestConfigMeta","Data_Param1","Data_Param2","Data_Param3","Data_Param4","Data_Expression","borderBottom","QuestTermTable","terms","term","showTerms","setShowTerms","showHardTerms","setShowHardTerms","showMissionTalks","setShowMissionTalks","dropper","enemiesCount","haveDrop","drop","reduce","prev","curr","questContainer","questTitle","questInfo","RankExp","Gold","Capacity","QuestTerms","padding","QuestTermConfigs","_HardCondition","HardInfomation","_HardLevel","QuestHardTermConfigs","EventArcs","arc","_TalkerName","_TalkText","Sider","Panel","QuestList","currentMissionType","setCurrentMissionType","missions","Object","groupBy","Missions","theme","sider","onSelect","border","missionListContent","bordered","m","ClassList","currentPage","setCurrentPage","classFilter","unitClass","defaultCurrent","defaultPageSize","page","total","SkillList","skillFilter","handleSetSearch","AbilityList","abilityFilter","EmojiList","drawerVisible","currentEmoji","_id","emoji","group","modalVisible","currentImage","isImg","ext","indexOf","error","span","emojis","deleteIconContainer","mutation","removeEmoji","onConfirm","ID","then","deleteIcon","emojiDrawer","marginBottom","imageBox","imageCover","imageActionContainer","imageAction","removeEmojiItem","onCancel","footer","Login","useForm","getFieldDecorator","validateFields","UserContext","loginForm","prefix","values","block","MissileList","Missiles","withRouter","isLoggedIn","path","component","exact","locale","client","ApolloClient","uri","App","zhCN","Provider","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9b944e99.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"content--3r6z8\",\"logoblock\":\"logoblock--296BZ\",\"topLogo\":\"topLogo--33_5D\",\"beg\":\"beg--18EC5\",\"postContainer\":\"postContainer--1nDMI\",\"calendarMonthDisabled\":\"calendarMonthDisabled--38ECZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sider\":\"sider--1H67N\",\"missionListContent\":\"missionListContent--2unrs\",\"ant-collapse-borderless\":\"ant-collapse-borderless--20xt2\",\"mission-type\":\"mission-type--1Gjki\",\"listCard\":\"listCard--2nbjx\"};","module.exports = __webpack_public_path__ + \"static/media/logo.509ca4a9.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header--nlkOh\",\"logo\":\"logo--1BJO0\",\"headerMenu\":\"headerMenu--1GBBS\"};","module.exports = __webpack_public_path__ + \"static/media/pay.f5dab129.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"table--1V8Hg\",\"th\":\"th--183Ee\",\"compact\":\"compact--33fUs\",\"fakeInput\":\"fakeInput--334Hy\",\"small\":\"small--1SGOm\",\"configRowGroup\":\"configRowGroup--QsRao\",\"cover\":\"cover--1iRZV\",\"blank\":\"blank--3wN7Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"table--2BMSm\",\"th\":\"th--FnBgT\",\"compact\":\"compact--2d1SD\",\"fakeInput\":\"fakeInput--AyhCo\",\"small\":\"small--3rB9X\",\"configRowGroup\":\"configRowGroup--32G4L\",\"cover\":\"cover--1tVKj\",\"blank\":\"blank--3IOcM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"table--2hG_J\",\"th\":\"th--36mVi\",\"compact\":\"compact--1re4T\",\"fakeInput\":\"fakeInput--3vmc6\",\"small\":\"small--1MzuO\",\"configRowGroup\":\"configRowGroup--1RPUv\",\"cover\":\"cover--1iNDU\",\"blank\":\"blank--25gJl\",\"container\":\"container--goCu8\",\"previewContainer\":\"previewContainer--J9R0N\",\"outerRadioContainer\":\"outerRadioContainer--1EKQe\",\"inset\":\"inset--d9CSK\",\"radioContainer\":\"radioContainer--CSvzk\",\"radioGroup\":\"radioGroup--18PZQ\",\"danger\":\"danger--3p-BL\",\"outerImageContainer\":\"outerImageContainer--2kmJA\",\"imageContainer\":\"imageContainer--2Irjl\",\"textContainer\":\"textContainer--2gsdv\",\"fullScreen\":\"fullScreen--37f7X\",\"closeButton\":\"closeButton--MOFv7\",\"text\":\"text--Jfrlt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"loginForm--3OVxD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"table--KBP_i\",\"th\":\"th--12gvq\",\"compact\":\"compact--3h5bu\",\"fakeInput\":\"fakeInput--3j1VW\",\"small\":\"small--3nYGv\",\"configRowGroup\":\"configRowGroup--3r-yE\",\"cover\":\"cover--2XgIG\",\"blank\":\"blank--1AH1E\",\"questContainer\":\"questContainer--1_Nzl\",\"questInfo\":\"questInfo--2d-n2\",\"tableActions\":\"tableActions--5NQPY\",\"enemyRowWithChange\":\"enemyRowWithChange--3o_8I\",\"rowShow\":\"rowShow--1zKw7\"};","import { useState } from 'react';\nimport { createContainer } from 'unstated-next';\n\nfunction useUser() {\n  const [state, setState] = useState(localStorage.getItem('fuck') || '');\n  return {\n    get isLoggedIn() {\n      return (\n        state === 'fuckpulu' ||\n        state === 'fuckbaozitou' ||\n        state === 'fuckmaoxiong' ||\n        state === 'fucktuo'\n      );\n    },\n    login(token: string) {\n      setState(token);\n      localStorage.setItem('fuck', token);\n    },\n  };\n}\n\nexport default createContainer(useUser);\n","import { useMediaQuery } from 'react-responsive';\nimport { createContainer } from 'unstated-next';\n\nfunction useMedia() {\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 991px)' });\n  return { isTabletOrMobile };\n}\n\nexport default createContainer(useMedia);\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Layout, Menu } from 'antd';\nimport { useLocation } from 'react-router-dom';\nimport logo from '../../logo.png';\nimport styles from './Header.module.less';\n\nconst { Header } = Layout;\nconst { SubMenu, Item } = Menu;\n\nconst HeaderBar: React.FC = () => {\n  const [active, setActive] = useState('/');\n  const location = useLocation();\n  useEffect(() => {\n    setActive(location.pathname.split('/')[1]);\n  }, [location]);\n\n  return (\n    <Header className={styles.header}>\n      <Link to=\"/\">\n        <img alt=\"logo\" src={logo} className={styles.logo} />\n      </Link>\n      <Menu\n        mode=\"horizontal\"\n        className={styles.headerMenu}\n        selectedKeys={[active]}\n      >\n        <Item key=\"unit\">\n          <Link to=\"/unit\">单位</Link>\n        </Item>\n        <Item key=\"quest\">\n          <Link to=\"/quest\">关卡</Link>\n        </Item>\n        <SubMenu title=\"...\">\n          <Item key=\"class\">\n            <Link to=\"/class\">职业</Link>\n          </Item>\n          <Item key=\"skill\">\n            <Link to=\"/skill\">技能</Link>\n          </Item>\n          <Item key=\"ability\">\n            <Link to=\"/ability\">被动</Link>\n          </Item>\n          <Item key=\"missile\">\n            <Link to=\"/missile\">子弹</Link>\n          </Item>\n        </SubMenu>\n        {/* <Item key=\"emoji\">\n              <Link to=\"/emoji\">机器狗</Link>\n            </Item> */}\n      </Menu>\n    </Header>\n  );\n};\n\nexport default HeaderBar;\n","import React from 'react';\nimport { Card } from 'antd';\nimport { CardProps } from 'antd/lib/card';\nimport './Card.less';\n\nexport default class ShadowedCard extends React.Component<\n  CardProps\n> {\n  public render() {\n    return <Card {...this.props} className=\"card\" />;\n  }\n}\n","import { Dot, Frame } from './interfaces';\n\nexport class DefaultGetter {\n  private obj: any;\n  public constructor(obj: any) {\n    this.obj = obj;\n  }\n  public get(index: string | number) {\n    if (index in this.obj) {\n      return this.obj[index];\n    } else {\n      return index.toString();\n    }\n  }\n}\n\n// random choose a item from a array\nexport function choose<T>(arr: T[]) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function renderDescription(source: string) {\n  return (\n    '<span>' +\n    source\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      .replace(/%c\\[(.{6})\\]/g, '</span><span style=\"color: #$1\">')\n      .replace(/\\n/g, '<br />') +\n    '</span>'\n  );\n}\n\nfunction range(min: number, max: number, length: number) {\n  if (length === 1) return [min];\n  const res: number[] = [];\n  const gap = (max - min) / (length - 1);\n  let current = min;\n  while (length !== 0) {\n    res.push(current);\n    current += gap;\n    length--;\n  }\n  return res;\n}\n\nexport function generateTimelines(dots: Dot) {\n  const timelines: Frame[][] = [];\n  const frameNum = dots.Length;\n  for (const entry of dots.Entries) {\n    if (!entry.Sprites) {\n      continue\n    }\n    const timeline: Frame[] = [];\n    let patternPos = 0;\n    for (let t = 0; t <= frameNum; t++) {\n      const pattern = entry.PatternNo[patternPos];\n      const prevFrame = timeline[timeline.length - 1];\n      const frame: Frame = {\n        Sprite: prevFrame\n          ? { ...prevFrame.Sprite }\n          : {\n              X: 0,\n              Y: 0,\n              Width: 0,\n              Height: 0,\n              OriginX: 0,\n              OriginY: 0,\n              ParsedX: 0,\n              ParsedY: 0,\n            },\n        Alpha: 1,\n        Pos: { X: 0, Y: 0 },\n        Scale: { X: 1, Y: 1 },\n      };\n\n      if (\n        pattern &&\n        (pattern.Time === t ||\n          pattern.Time === undefined ||\n          pattern.Time === null)\n      ) {\n        frame.Sprite = {\n          ...entry.Sprites[pattern.Data],\n          ParsedX: 0,\n          ParsedY: 0,\n        };\n        patternPos++;\n      }\n\n      timeline.push(frame);\n      if (pattern && pattern.Time === undefined) break;\n    }\n\n    if (entry.Alpha) {\n      for (let alphaPos = 0; alphaPos < entry.Alpha.length - 1; alphaPos++) {\n        const prevAlpha = entry.Alpha[alphaPos];\n        const nextAlpha = entry.Alpha[alphaPos + 1];\n        const alphas = range(\n          prevAlpha.Data,\n          nextAlpha.Data,\n          nextAlpha.Time - prevAlpha.Time + 1,\n        );\n        for (let t = prevAlpha.Time; t <= nextAlpha.Time; t++) {\n          timeline[t].Alpha = alphas[t - prevAlpha.Time];\n        }\n      }\n      if (entry.Alpha.length === 1) {\n        for (const frame of timeline) {\n          frame.Alpha = entry.Alpha[0].Data;\n        }\n      }\n    }\n\n    if (entry.Pos) {\n      for (let posPos = 0; posPos < entry.Pos.length - 1; posPos++) {\n        const prevPos = entry.Pos[posPos];\n        const nextPos = entry.Pos[posPos + 1];\n        const posesX = range(\n          prevPos.Data.X,\n          nextPos.Data.X,\n          nextPos.Time - prevPos.Time + 1,\n        );\n        const posesY = range(\n          prevPos.Data.Y,\n          nextPos.Data.Y,\n          nextPos.Time - prevPos.Time + 1,\n        );\n\n        for (let t = prevPos.Time; t <= nextPos.Time; t++) {\n          timeline[t].Pos.X = posesX[t - prevPos.Time];\n          timeline[t].Pos.Y = posesY[t - prevPos.Time];\n        }\n      }\n\n      if (entry.Pos.length === 1) {\n        for (const frame of timeline) {\n          frame.Pos = { ...entry.Pos[0].Data };\n        }\n      }\n    }\n\n    if (entry.Scale) {\n      for (let scalePos = 0; scalePos < entry.Scale.length - 1; scalePos++) {\n        const prevScale = entry.Scale[scalePos];\n        const nextScale = entry.Scale[scalePos + 1];\n        const scalesX = range(\n          prevScale.Data.X,\n          nextScale.Data.X,\n          nextScale.Time - prevScale.Time + 1,\n        );\n        const scalesY = range(\n          prevScale.Data.Y,\n          nextScale.Data.Y,\n          nextScale.Time - prevScale.Time + 1,\n        );\n\n        for (let t = prevScale.Time; t <= nextScale.Time; t++) {\n          timeline[t].Scale.X = scalesX[t - prevScale.Time];\n          timeline[t].Scale.Y = scalesY[t - prevScale.Time];\n        }\n      }\n      if (entry.Scale.length === 1) {\n        for (const frame of timeline) {\n          frame.Scale = { ...entry.Scale[0].Data };\n        }\n      }\n    }\n\n    timelines.push(timeline);\n  }\n\n  timelines.forEach(timeline =>\n    timeline.forEach(frame => {\n      frame.Sprite.ParsedX =\n        frame.Sprite.OriginX -\n        frame.Pos.X +\n        (frame.Sprite.Width / 2) * (frame.Scale.X - 1);\n      frame.Sprite.ParsedY =\n        frame.Sprite.OriginY -\n        frame.Pos.Y +\n        frame.Sprite.Height * (frame.Scale.Y - 1);\n    }),\n  );\n\n  return timelines;\n}\n","import { DefaultGetter } from './utils';\nexport const BASE_SERVER_URL =\n  process.env.REACT_APP_SERVER || 'https://aigisapi.naberi.us';\n// export const BASE_SERVER_URL = 'http://localhost:4000';\nexport const BASE_GAME_URL = 'https://drc1bk94f7rq8.cloudfront.net';\nexport const GAME_POSTER_URL = BASE_GAME_URL + '/00/html/image';\nexport const API_URL = BASE_SERVER_URL + '/graphql';\nexport const STATIC_URL = BASE_SERVER_URL + '/static';\nexport const PLAYER_DOT_URL = STATIC_URL + '/playerDot';\nexport const ENEMY_DOT_URL = STATIC_URL + '/enemyDot';\nexport const BATTLE_TALK_EVENT_URL = STATIC_URL + '/battleTalkEvent';\nexport const EMOJI_URL = STATIC_URL + '/cqp';\nexport const ICO_URL = STATIC_URL + '/ico';\nexport const BANNER_URL = STATIC_URL + '/banner';\nexport const PLAYER_STAND_CG_URL = STATIC_URL + '/standCG';\nexport const PLAYER_HARLEM_CG_URL = STATIC_URL + '/harlemCG';\nexport const MAP_IMAGE_URL = STATIC_URL + '/map';\n\nexport const ENEMY_CHANGE_COND: { [k: number]: string } = {\n  0: '条件切换',\n  1: '阻挡切换',\n  2: '死亡切换',\n  3: '半血切换',\n  4: '一次性攻击切换',\n  5: '血量99%切换',\n};\nexport const BONUS_TYPE = new DefaultGetter({\n  1: 'HP +%d',\n  2: '攻击 +%d',\n  3: '防御 +%d',\n  4: '射程 +%d',\n  5: '魔抗 +%d',\n  6: '后摇 -%d',\n  7: '技能持续 +%d%',\n  8: '技能再动 -%d%',\n  9: '物理攻击回避 +%d%',\n  11: '贯通概率 +%d%',\n});\n","import React from 'react';\nimport { Spin } from 'antd';\nimport { choose } from '../../utils';\nimport { SpinProps } from 'antd/lib/spin';\n\nconst fuck = ['氆氇', '脱', '包子头', '毛熊', 'ED'];\n\nconst Loading: React.FC<SpinProps> = ({ ...props }) => (\n  <Spin\n    tip={`干${choose(fuck)}中...`}\n    size=\"large\"\n    style={{ marginTop: '20vh', display: 'block' }}\n    {...props}\n  />\n);\n\nexport default Loading;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Layout, Col, Popover, Calendar, Row, Button } from 'antd';\nimport gql from 'graphql-tag';\nimport moment from 'moment';\nimport Card from 'Components/Card';\nimport logo from 'logo.png';\nimport payImage from './pay.png';\nimport styles from './Home.module.less';\nimport { useQuery } from '@apollo/react-hooks';\nimport { BANNER_URL, GAME_POSTER_URL } from 'consts';\nimport classNames from 'classnames';\nimport Loading from 'Components/Loading';\n\nconst { Content } = Layout;\n\nconst Home: React.FC = () => {\n  const [date, setDate] = useState<moment.Moment>();\n  const [selectedDate, setSelectedDate] = useState<moment.Moment>();\n  const { loading, data } = useQuery<{\n    UpdateTime: number;\n    Posters: string[];\n    Banners: string[];\n  }>(\n    gql`\n      query {\n        UpdateTime\n        Posters\n        Banners\n      }\n    `,\n    {\n      onCompleted: d => {\n        if (d.Posters.length > 0) {\n          const posterName = d.Posters[d.Posters.length - 1];\n          setSelectedDate(moment(posterName.slice(5, 13), 'YYYYMMDD'));\n        }\n      },\n    },\n  );\n\n  const posterRef = useRef<HTMLImageElement>(null);\n  const [posterLoading, setPosterLoading] = useState(true);\n\n  useEffect(() => {\n    if (\n      data?.Posters.includes(`event${selectedDate?.format('YYYYMMDD')}.jpg`)\n    ) {\n      setDate(selectedDate);\n    }\n  }, [data, selectedDate]);\n\n  useEffect(() => {\n    if (date && posterRef.current) {\n      posterRef.current.src = `${GAME_POSTER_URL}/event${date.format(\n        'YYYYMMDD',\n      )}.jpg`;\n      setPosterLoading(true);\n    }\n  }, [date]);\n\n  return (\n    <Content className={styles.content + ' container'}>\n      <div className={styles.logoblock}>\n        <img alt=\"logo\" src={logo} className={styles.topLogo} />\n        <h1>Naberius</h1>\n      </div>\n      <Card loading={loading}>\n        {!loading && data && (\n          <div>\n            更新时间：\n            <time>{moment(data.UpdateTime).fromNow()}</time>\n          </div>\n        )}\n      </Card>\n      <Row gutter={16}>\n        <Col xs={24} md={12}>\n          <Card loading={loading} style={{ marginTop: 16 }}>\n            <h2>卡池</h2>\n            {data &&\n              data.Banners.map(bannerName => (\n                <img\n                  alt={bannerName}\n                  key={bannerName}\n                  src={`${BANNER_URL}/${bannerName}`}\n                  style={{ maxWidth: '100%' }}\n                />\n              ))}\n          </Card>\n        </Col>\n        <Col xs={24} md={12}>\n          <Card loading={loading} style={{ marginTop: 16 }}>\n            <h2>海报</h2>\n            <Calendar\n              value={selectedDate || moment()}\n              onChange={value => {\n                setSelectedDate(value);\n              }}\n              fullscreen={false}\n              monthFullCellRender={value => {\n                const first = data?.Posters.find(p =>\n                  p.startsWith(`event${value.format('YYYYMM')}`),\n                );\n                return (\n                  <div className=\"ant-fullcalendar-month\">\n                    <div\n                      className={classNames('ant-fullcalendar-value', {\n                        [styles.calendarMonthDisabled]: !first,\n                      })}\n                      onClick={() =>\n                        first &&\n                        setSelectedDate(moment(first.slice(5, 13), 'YYYYMMDD'))\n                      }\n                    >\n                      {value.localeData().monthsShort(value)}\n                    </div>\n                  </div>\n                );\n              }}\n              disabledDate={value => {\n                if (data) {\n                  for (const posterName of data.Posters) {\n                    if (posterName === `event${value.format('YYYYMMDD')}.jpg`)\n                      return false;\n                  }\n                }\n                return true;\n              }}\n            />\n            <Loading spinning={posterLoading}>\n              {date && (\n                <img\n                  ref={posterRef}\n                  onLoad={() => setPosterLoading(false)}\n                  alt={date.format('YYYY/MM/DD')}\n                  style={{ width: '100%' }}\n                />\n              )}\n            </Loading>\n          </Card>\n        </Col>\n      </Row>\n      <div className={styles.beg}>\n        <Popover\n          placement=\"top\"\n          trigger=\"click\"\n          content={\n            <img\n              alt=\"唯一指定邮箱minalinskyx#hotmail.com，您pay吗\"\n              src={payImage}\n              width={500}\n            />\n          }\n        >\n          <Button type=\"primary\">\n            给魔狗买一杯\n            <span role=\"img\" aria-label=\"coffee\">\n              ☕️\n            </span>\n          </Button>\n        </Popover>\n      </div>\n    </Content>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nconst Rarity: React.FC<{ rare: number }> = ({ rare }) => {\n  switch (rare) {\n    case 0:\n      return <span style={{ color: 'grey' }}>★</span>;\n    case 1:\n      return <span style={{ color: 'brown' }}>★★</span>;\n    case 2:\n      return <span style={{ color: 'silver' }}>★★★</span>;\n    case 3:\n      return <span style={{ color: 'gold' }}>★★★★</span>;\n    case 4:\n      return <span>☆☆☆☆☆</span>;\n    case 5:\n      return <span style={{ color: 'black' }}>★★★★★★</span>;\n    case 7:\n      return <span style={{ color: 'blue' }}>SAPPHIRE</span>;\n    case 10:\n      return <span style={{ textShadow: '0 0 1px deepskyblue' }}>☆☆☆☆☆</span>;\n    case 11:\n      return (\n        <span style={{ textShadow: '0 0 1px gold', color: 'black' }}>\n          ★★★★★★\n        </span>\n      );\n    default:\n      return <span>UNKNOWN</span>;\n  }\n};\n\nexport default Rarity;\n","import React from 'react';\nimport { Row, Col, Tag } from 'antd';\nimport Rarity from '../../Rarity';\nimport styles from './UnitList.module.less';\nimport { ICO_URL } from '../../../consts';\nimport { Card } from './types';\nimport classNames from 'classnames';\n\ninterface UnitListCardProps {\n  card: Card;\n  showUnit: (cardID: string) => void;\n  setFilter: (search: string, searchType: string) => void;\n  style?: React.CSSProperties;\n}\n\ninterface FormFields {\n  nickName: string;\n  conneName: string;\n}\n\nconst UnitListCard: React.FC<UnitListCardProps> = ({\n  card,\n  showUnit,\n  setFilter,\n  style,\n}) => {\n  return (\n    <div\n      style={style}\n      className={classNames(styles.listCard, {\n        [styles.male]: Number.parseInt(card.Kind) === 1,\n        [styles.female]: Number.parseInt(card.Kind) === 0,\n      })}\n    >\n      <Row\n        type=\"flex\"\n        style={{ alignItems: 'center' }}\n        onClick={() => showUnit(card.CardID)}\n      >\n        <Col md={2} xs={3}>\n          {card.CardID}\n        </Col>\n        <Col md={2} xs={5}>\n          <img\n            src={`${ICO_URL}/0/${card.CardID}.png`}\n            alt={card.CardID.toString()}\n            height=\"48\"\n          />\n        </Col>\n        <Col md={4} xs={16}>\n          <Rarity rare={Number.parseInt(card.Rare, 10)} />\n          <br />\n          {card.Name}\n        </Col>\n        <Col lg={6} xs={0}>\n          {card.RaceName && (\n            <span\n              onClick={(e) => {\n                e.stopPropagation();\n                setFilter(card.RaceName, 'RaceName');\n              }}\n            >\n              <Tag>{card.RaceName}</Tag>\n            </span>\n          )}\n          {card.AssignName && (\n            <span\n              onClick={(e) => {\n                e.stopPropagation();\n                setFilter(card.AssignName, 'AssignName');\n              }}\n            >\n              <Tag color=\"magenta\">{card.AssignName}</Tag>\n            </span>\n          )}\n          {card.IdentityName && (\n            <span\n              onClick={(e) => {\n                e.stopPropagation();\n                setFilter(card.IdentityName, 'IdentityName');\n              }}\n            >\n              <Tag color=\"black\">{card.IdentityName}</Tag>\n            </span>\n          )}\n          {card.GenusName && (\n            <span\n              onClick={(e) => {\n                e.stopPropagation();\n                setFilter(card.GenusName, 'GenusName');\n              }}\n            >\n              <Tag color=\"blue\">{card.GenusName}</Tag>\n            </span>\n          )}\n        </Col>\n        <Col\n          lg={5}\n          md={8}\n          xs={0}\n          className=\"filter\"\n          onClick={(e) => {\n            e.stopPropagation();\n            setFilter(card.Classes[0].Name, 'Classes.0.Name');\n          }}\n        >\n          {card.Classes[0].Name}\n        </Col>\n        <Col\n          lg={5}\n          md={8}\n          xs={0}\n          className=\"filter\"\n          onClick={(e) => {\n            e.stopPropagation();\n            setFilter(card.IllustName, 'IllustName');\n          }}\n        >\n          {card.IllustName}\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default UnitListCard;\n","import gql from 'graphql-tag';\n\nexport const DotFragment = gql`\n  fragment Dot on Dot {\n    Name\n    Length\n    Entries {\n      Sprites {\n        X\n        Y\n        Width\n        Height\n        OriginX\n        OriginY\n      }\n      PatternNo {\n        Time\n        Data\n      }\n      Pos {\n        Time\n        Data {\n          X\n          Y\n        }\n      }\n      Scale {\n        Time\n        Data {\n          X\n          Y\n        }\n      }\n      Alpha {\n        Time\n        Data\n      }\n    }\n  }\n`;\n\nexport const MissileFragment = gql`\n  fragment missile on Missile {\n    MissileID\n    PatternID\n    Enemy\n    Speed\n    SlowTime\n    SlowRate\n    DamageArea\n    Property\n  }\n`;\n\nexport const EnemyFragment = gql`\n  fragment enemy on Enemy {\n    DotRate\n    HitEffect\n    MissileID\n    DeadEffect\n    SpecialEffect\n    PatternID\n    Weather\n    HP\n    HP_MAX\n    ATTACK_POWER\n    TypeAttack\n    ATTACK_RANGE\n    ATTACK_SPEED\n    ARMOR_DEFENSE\n    MAGIC_DEFENSE\n    MOVE_SPEED\n    SKILL\n    SkyFlag\n    GainCost\n    EffectHeight\n    MagicAttack\n    AttackWait\n    MissileID\n    Missile {\n      ...missile\n    }\n    DeadEffect\n    Param_ResistanceAssassin\n    Param_ChangeParam\n    Param_ChangeCondition\n    SpecialtyConfigs {\n      Type_Influence\n      Param_1\n      Param_2\n      Param_3\n      Param_4\n      _Expression\n      _ExtParam\n      Comment\n    }\n    EnemyElem {\n      _EnemyElementName\n    }\n    EnemyType {\n      _EnemyTypeName\n    }\n    Dots {\n      ...Dot\n    }\n    _Attribute\n  }\n  ${MissileFragment}\n`;\n","import gql from 'graphql-tag';\nimport { Card } from 'interfaces';\nimport { DotFragment, MissileFragment } from 'fragments';\n\nexport interface Data {\n  Card: Card;\n}\n\nexport const query = gql`\n  query($id: Int!) {\n    Card(CardID: $id) {\n      SpecialtyConfigs {\n        ID_Card\n        Type_Specialty\n        Value_Specialty\n        Value_Param1\n        Value_Param2\n        Value_Param3\n        Value_Param4\n        Command\n        Comment\n      }\n      CardID\n      _AwakePattern\n      HarlemTextR\n      HarlemTextA\n      Name\n      Rare\n      Kind\n      MaxHPMod\n      AtkMod\n      DefMod\n      CostModValue\n      CostDecValue\n      MagicResistance\n      BonusType\n      BonusNum\n      BonusType2\n      BonusNum2\n      BonusType3\n      BonusNum3\n      RaceName\n      AssignName\n      IdentityName\n      IllustName\n      HomeCooking\n      SellPrice\n      BuildExp\n      _TradePoint\n      ConneName\n      NickNames\n      Dots {\n        ...Dot\n      }\n      Classes {\n        JobChange\n        AttackAttribute\n        Missile {\n          ...missile\n        }\n        Cards {\n          Rare\n          CardID\n          Name\n        }\n        Type\n        ClassID\n        Name\n        InitHP\n        MaxHP\n        InitDef\n        MaxDef\n        InitAtk\n        MaxAtk\n        AtkArea\n        BlockNum\n        MaxLevel\n        Explanation\n        Cost\n        NickNames\n        Data_ExtraAwakeOrbs {\n          Name\n        }\n        AttackWait\n        ClassAbilityConfigs {\n          _InvokeType\n          _TargetType\n          _InfluenceType\n          _Param1\n          _Param2\n          _Param3\n          _Param4\n          _Command\n          _ActivateCommand\n          Comment\n        }\n        ClassAbilityPower1\n        BattleStyle {\n          Data_ID\n          Type_BattleStyle\n          _Param_01\n          _Param_02\n          _Range_01\n          _Range_02\n          _Range_03\n          _Range_04\n          _Range_05\n        }\n      }\n      ImageCG\n      ImageStand\n      Abilities {\n        Cards {\n          Rare\n          CardID\n          Name\n        }\n        Type\n        AbilityID\n        Text\n        AbilityName\n        Configs {\n          _InvokeType\n          _TargetType\n          _InfluenceType\n          _Param1\n          _Param2\n          _Param3\n          _Param4\n          _Command\n          _ActivateCommand\n          Comment\n        }\n      }\n      ClassLV0SkillID\n      ClassLV1SkillID\n      Skills {\n        Type\n        Skills {\n          SkillName\n          WaitTime\n          ContTimeMax\n          PowerMax\n          LevelMax\n          Text\n          SkillID\n          Cards {\n            Rare\n            Name\n            CardID\n          }\n          Configs {\n            Type_Collision\n            Type_CollisionState\n            Type_ChangeFunction\n            Data_Target\n            Data_InfluenceType\n            Data_MulValue\n            Data_MulValue2\n            Data_MulValue3\n            Data_AddValue\n            _HoldRatioUpperLimit\n            _Expression\n            _ExpressionActivate\n            Comment\n          }\n        }\n      }\n    }\n  }\n  ${DotFragment}\n  ${MissileFragment}\n`;\n","import React from 'react';\n\nconst Gender: React.FC<{ gender: number }> = ({ gender }) => {\n  if (gender === 0) {\n    return <span style={{ color: 'blue' }}>♂</span>;\n  } else if (gender === 1) {\n    return <span style={{ color: 'red' }}>♀</span>;\n  }\n  return null;\n};\n\nexport default Gender;\n","import React, { useState, useRef, useEffect } from 'react';\nimport styles from './SkillTable.module.less';\nimport { Button, Row, Col, Input, message, Spin } from 'antd';\nimport { renderDescription } from '../../utils';\nimport { SkillData, SkillConfig } from 'interfaces';\nimport MediaContext from 'context/MediaContext';\nimport { Link } from 'react-router-dom';\nimport { ICO_URL } from 'consts';\nimport classNames from 'classnames';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nconst SKILL_TYPE = {\n  Init: '初始',\n  CC: 'CC',\n  Evo: '技觉',\n};\n\nconst SkillConfigTableRows: React.FC<{ config: SkillConfig }> = ({\n  config,\n}) => {\n  const [value, setValue] = useState(config.Comment || '');\n\n  const [setSkillConfigMeta, { loading, data }] = useMutation<{\n    SkillConfigMeta?: { TypeID: number; Comment: string };\n  }>(\n    gql`\n      mutation($TypeID: Int!, $Comment: String) {\n        SkillConfigMeta(TypeID: $TypeID, Comment: $Comment) {\n          TypeID\n          Comment\n        }\n      }\n    `,\n    {\n      onCompleted: (d) => {\n        setValue(d?.SkillConfigMeta?.Comment || '');\n      },\n    },\n  );\n\n  const [editing, setEditing] = useState(false);\n  const ref = useRef<Input>(null);\n\n  useEffect(() => {\n    if (editing && ref.current) {\n      ref.current.focus();\n    }\n  }, [editing]);\n\n  const handleSave = async () => {\n    await setSkillConfigMeta({\n      variables: { TypeID: config.Data_InfluenceType, Comment: value },\n    });\n    message.success('修改成功');\n    setEditing(false);\n  };\n\n  return (\n    <tbody className={styles.configRowGroup}>\n      <tr className={styles.cover}>\n        <td\n          colSpan={8}\n          className={classNames({\n            [styles.blank]: !(data\n              ? data.SkillConfigMeta?.Comment\n              : config.Comment),\n          })}\n        >\n          {editing ? (\n            <Spin spinning={loading}>\n              <Input\n                size=\"small\"\n                ref={ref}\n                value={value}\n                onChange={(e) => setValue(e.target.value)}\n                onBlur={handleSave}\n                onPressEnter={handleSave}\n              />\n            </Spin>\n          ) : (\n            <div\n              className={classNames(styles.fakeInput, styles.small)}\n              onClick={() => setEditing(true)}\n            >\n              {data ? data.SkillConfigMeta?.Comment : config.Comment}\n            </div>\n          )}\n        </td>\n      </tr>\n      <tr>\n        <td>{config.Data_InfluenceType}</td>\n        <td>{config.Data_MulValue}</td>\n        <td>{config.Data_MulValue2}</td>\n        <td>{config._HoldRatioUpperLimit || config.Data_MulValue3}</td>\n        <td>{config.Data_AddValue}</td>\n        <td>{config.Type_Collision}</td>\n        <td>{config.Type_CollisionState}</td>\n        <td>{config.Data_Target}</td>\n      </tr>\n      {(config._ExpressionActivate !== '' || config._Expression !== '') && (\n        <tr>\n          <td\n            colSpan={4}\n            style={{\n              wordWrap: 'break-word',\n            }}\n          >\n            {config._Expression}\n          </td>\n          <td\n            colSpan={4}\n            style={{\n              wordWrap: 'break-word',\n            }}\n          >\n            {config._ExpressionActivate}\n          </td>\n        </tr>\n      )}\n    </tbody>\n  );\n};\n\nconst SkillTableRows: React.FC<{ skill: SkillData }> = ({ skill }) => {\n  const [showConfigs, setShowConfigs] = useState(false);\n  const { isTabletOrMobile } = MediaContext.useContainer();\n  const secondRow = (\n    <>\n      <td>{skill.LevelMax}</td>\n      <td>{skill.ContTimeMax}</td>\n      <td>{skill.WaitTime - skill.LevelMax}</td>\n      <td>{skill.PowerMax}</td>\n      <td>\n        <Button\n          type=\"primary\"\n          size=\"small\"\n          onClick={() => setShowConfigs(!showConfigs)}\n          icon={showConfigs ? 'up' : 'down'}\n        />\n      </td>\n    </>\n  );\n  return (\n    <React.Fragment>\n      <tr>\n        <th colSpan={isTabletOrMobile ? 2 : 1}>\n          <small>#{skill.SkillID}</small>\n          {skill.SkillName}\n        </th>\n        <td\n          colSpan={isTabletOrMobile ? 3 : 1}\n          style={{ textAlign: 'left' }}\n          dangerouslySetInnerHTML={{\n            __html: renderDescription(skill.Text),\n          }}\n        />\n        {!isTabletOrMobile && secondRow}\n      </tr>\n      {isTabletOrMobile && <tr>{secondRow}</tr>}\n      {showConfigs && (\n        <tr>\n          <td colSpan={isTabletOrMobile ? 5 : 7}>\n            <Row gutter={8}>\n              <Col xs={24} md={12}>\n                <table\n                  className={styles.table}\n                  style={{ tableLayout: 'fixed' }}\n                >\n                  <tbody>\n                    <tr>\n                      <th style={{ width: '6em' }}>拥有的卡</th>\n                      <td>\n                        {skill.Cards.sort((c1, c2) => c2.Rare - c1.Rare).map(\n                          (card) => (\n                            <Link key={card.CardID} to={`/unit/${card.CardID}`}>\n                              <img\n                                alt={card.CardID.toString()}\n                                style={{ width: 40, marginLeft: 8 }}\n                                src={`${ICO_URL}/0/${card.CardID}.png`}\n                              />\n                              {card.Name}\n                            </Link>\n                          ),\n                        )}\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </Col>\n              <Col xs={24} md={12}>\n                <table\n                  className={styles.table}\n                  style={{\n                    tableLayout: 'fixed',\n                    position: 'relative',\n                  }}\n                >\n                  <thead>\n                    <tr>\n                      <th>类型</th>\n                      <th>効果</th>\n                      <th>差分</th>\n                      <th>固定</th>\n                      <th>加算</th>\n                      <th>冲突</th>\n                      <th>状态</th>\n                      <th>对象</th>\n                    </tr>\n                    <tr>\n                      <th colSpan={4}>条件</th>\n                      <th colSpan={4}>发动条件</th>\n                    </tr>\n                  </thead>\n                  {skill.Configs.map((config, index) => (\n                    <SkillConfigTableRows config={config} key={index} />\n                  ))}\n                </table>\n              </Col>\n            </Row>\n          </td>\n        </tr>\n      )}\n    </React.Fragment>\n  );\n};\n\nconst SkillTable: React.FC<{\n  skills: SkillData[];\n  type?: keyof typeof SKILL_TYPE;\n}> = ({ skills, type }) => {\n  const { isTabletOrMobile } = MediaContext.useContainer();\n  return (\n    <table className={styles.table}>\n      <thead>\n        {type && (\n          <tr>\n            <td colSpan={7}>{SKILL_TYPE[type]}</td>\n          </tr>\n        )}\n        <tr>\n          {!isTabletOrMobile && (\n            <>\n              <td style={{ width: 200 }} />\n              <th>描述</th>\n            </>\n          )}\n          <th style={{ width: isTabletOrMobile ? '20%' : 60 }}>等级</th>\n          <th style={{ width: isTabletOrMobile ? '20%' : 60 }}>持续</th>\n          <th style={{ width: isTabletOrMobile ? '20%' : 60 }}>再动</th>\n          <th style={{ width: isTabletOrMobile ? '20%' : 60 }}>强度</th>\n          <th style={{ width: isTabletOrMobile ? '20%' : 60 }}>详细</th>\n        </tr>\n      </thead>\n      <tbody>\n        {skills.map((skill, index) => (\n          <SkillTableRows key={index} skill={skill} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default SkillTable;\n","import React, { useState, useRef, useEffect } from 'react';\nimport styles from './AbilityTable.module.less';\nimport { renderDescription } from '../../utils';\nimport { Button, Row, Col, Input, message, Spin } from 'antd';\nimport { AbilityData, AbilityConfig } from 'interfaces';\nimport MediaContext from 'context/MediaContext';\nimport { Link } from 'react-router-dom';\nimport { ICO_URL } from 'consts';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport classNames from 'classnames';\n\nconst ABILITY_TYPE = {\n  Init: '初始',\n  Evo: '觉醒',\n};\n\nconst AbilityConfigTableRows: React.FC<{ config: AbilityConfig }> = ({\n  config,\n}) => {\n  const [value, setValue] = useState(config.Comment || '');\n\n  const [setAbilityConfigMeta, { loading, data }] = useMutation<{\n    AbilityConfigMeta?: { TypeID: number; Comment: string };\n  }>(\n    gql`\n      mutation($TypeID: Int!, $Comment: String) {\n        AbilityConfigMeta(TypeID: $TypeID, Comment: $Comment) {\n          TypeID\n          Comment\n        }\n      }\n    `,\n    {\n      onCompleted: d => {\n        setValue(d?.AbilityConfigMeta?.Comment || '');\n      },\n    },\n  );\n\n  const [editing, setEditing] = useState(false);\n  const ref = useRef<Input>(null);\n\n  useEffect(() => {\n    if (editing && ref.current) {\n      ref.current.focus();\n    }\n  }, [editing]);\n\n  const handleSave = async () => {\n    await setAbilityConfigMeta({\n      variables: { TypeID: config._InfluenceType, Comment: value },\n    });\n    message.success('修改成功');\n    setEditing(false);\n  };\n\n  return (\n    <tbody className={styles.configRowGroup}>\n      <tr className={styles.cover}>\n        <td\n          colSpan={8}\n          className={classNames({\n            [styles.blank]: !(data\n              ? data.AbilityConfigMeta?.Comment\n              : config.Comment),\n          })}\n        >\n          {editing ? (\n            <Spin spinning={loading}>\n              <Input\n                size=\"small\"\n                ref={ref}\n                value={value}\n                onChange={e => setValue(e.target.value)}\n                onBlur={handleSave}\n                onPressEnter={handleSave}\n              />\n            </Spin>\n          ) : (\n            <div\n              className={classNames(styles.fakeInput, styles.small)}\n              onClick={() => setEditing(true)}\n            >\n              {data ? data.AbilityConfigMeta?.Comment : config.Comment}\n            </div>\n          )}\n        </td>\n      </tr>\n      <tr>\n        <td>{config._InfluenceType}</td>\n        <td>{config._Param1}</td>\n        <td>{config._Param2}</td>\n        <td>{config._Param3}</td>\n        <td>{config._Param4}</td>\n        <td>{config._InvokeType}</td>\n        <td>{config._TargetType}</td>\n      </tr>\n      {(config._Command !== '' || config._ActivateCommand !== '') && (\n        <tr>\n          <td\n            colSpan={3}\n            style={{\n              wordWrap: 'break-word',\n            }}\n          >\n            {config._Command}\n          </td>\n          <td\n            colSpan={4}\n            style={{\n              wordWrap: 'break-word',\n            }}\n          >\n            {config._ActivateCommand}\n          </td>\n        </tr>\n      )}\n    </tbody>\n  );\n};\n\nconst AbilityTable: React.FC<{ ability: AbilityData }> = ({ ability }) => {\n  const { isTabletOrMobile } = MediaContext.useContainer();\n  const [showConfigs, setShowConfigs] = useState(false);\n  return (\n    <table className={styles.table}>\n      <tbody>\n        {isTabletOrMobile && ability.Type && (\n          <tr>\n            <td colSpan={3}>{ABILITY_TYPE[ability.Type]}</td>\n          </tr>\n        )}\n        {!isTabletOrMobile && (\n          <tr>\n            <td>{ABILITY_TYPE[ability.Type]}</td>\n            <th>描述</th>\n            <th>详细</th>\n          </tr>\n        )}\n        <tr>\n          <th style={{ width: '30%' }}>\n            <small>#{ability.AbilityID}</small>\n            {ability.AbilityName}\n          </th>\n          <td\n            style={{ textAlign: 'left' }}\n            dangerouslySetInnerHTML={{\n              __html: renderDescription(ability.Text),\n            }}\n          />\n          <td style={{ width: 50 }}>\n            <Button\n              type=\"primary\"\n              size=\"small\"\n              onClick={() => setShowConfigs(!showConfigs)}\n              icon={showConfigs ? 'up' : 'down'}\n            />\n          </td>\n        </tr>\n        {showConfigs && (\n          <tr>\n            <td colSpan={3}>\n              <Row gutter={8}>\n                <Col xs={24} md={12}>\n                  <table\n                    className={styles.table}\n                    style={{\n                      tableLayout: 'fixed',\n                    }}\n                  >\n                    <tbody>\n                      <tr>\n                        <th style={{ width: '6em' }}>拥有的卡</th>\n                        <td>\n                          {ability.Cards.sort(\n                            (c1, c2) => c2.Rare - c1.Rare,\n                          ).map(card => (\n                            <Link key={card.CardID} to={`/unit/${card.CardID}`}>\n                              <img\n                                alt={card.CardID.toString()}\n                                style={{ width: 40, marginLeft: 8 }}\n                                src={`${ICO_URL}/0/${card.CardID}.png`}\n                              />\n                              {card.Name}\n                            </Link>\n                          ))}\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </Col>\n                <Col xs={24} md={12}>\n                  <table\n                    className={styles.table}\n                    style={{\n                      tableLayout: 'fixed',\n                      position: 'relative',\n                    }}\n                  >\n                    <thead>\n                      <tr>\n                        <th>类型</th>\n                        <th>p1</th>\n                        <th>p2</th>\n                        <th>p3</th>\n                        <th>p4</th>\n                        <th>发动</th>\n                        <th>对象</th>\n                      </tr>\n                      <tr>\n                        <th colSpan={3}>条件</th>\n                        <th colSpan={4}>发动条件</th>\n                      </tr>\n                    </thead>\n                    {ability.Configs.map((config, index) => (\n                      <AbilityConfigTableRows key={index} config={config} />\n                    ))}\n                  </table>\n                </Col>\n              </Row>\n            </td>\n          </tr>\n        )}\n      </tbody>\n    </table>\n  );\n};\n\nexport default AbilityTable;\n","import React from 'react';\nimport { Missile } from 'interfaces';\nimport styles from './MissileTable.module.less';\nimport MediaContext from 'context/MediaContext';\n\nconst MissileTable: React.FC<{\n  missile: Missile;\n  compact?: boolean;\n}> = ({ missile, compact = false }) => {\n  const { isTabletOrMobile } = MediaContext.useContainer();\n  const isCompact = isTabletOrMobile || compact;\n  return (\n    <table className={styles.table} style={{ tableLayout: 'fixed' }}>\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>点阵</th>\n          <th>是否敌人</th>\n          <th>速度</th>\n          <th>减速时间</th>\n          <th>减速比例</th>\n          <th>溅射</th>\n          {!isCompact && <th>属性</th>}\n        </tr>\n        {!!(isCompact && missile.Property) && (\n          <tr>\n            <th colSpan={7}>属性</th>\n          </tr>\n        )}\n      </thead>\n      <tbody>\n        <tr>\n          <td>{missile.MissileID}</td>\n          <td>{missile.PatternID.toString(16)}</td>\n          <td>{missile.Enemy ? '是' : '否'}</td>\n          <td>{missile.Speed}</td>\n          <td>{missile.SlowTime}</td>\n          <td>{missile.SlowRate}</td>\n          <td>{missile.DamageArea}</td>\n          {!isCompact && <td>{missile.Property}</td>}\n        </tr>\n        {!!(missile.Property && isCompact) && (\n          <tr>\n            <td colSpan={7}>{missile.Property}</td>\n          </tr>\n        )}\n      </tbody>\n    </table>\n  );\n};\n\nexport default MissileTable;\n","import React, { useState, useEffect, useRef } from 'react';\nimport styles from './ClassTable.module.less';\nimport { renderDescription } from '../../utils';\nimport { Button, Row, Col, Select, Spin, Tag, message, Input } from 'antd';\nimport { ClassData, AbilityConfig } from 'interfaces';\nimport MediaContext from 'context/MediaContext';\nimport { Link } from 'react-router-dom';\nimport { ICO_URL } from 'consts';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport MissileTable from 'Components/MissileTable';\nimport classNames from 'classnames';\n\nconst CLASS_TYPE = {\n  Init: '初始',\n  CC: 'CC',\n  Evo: '觉醒',\n  Evo2a: '二觉A',\n  Evo2b: '二觉B',\n};\n\nconst AbilityConfigTableRows: React.FC<{ config: AbilityConfig }> = ({\n  config,\n}) => {\n  const [value, setValue] = useState(config.Comment || '');\n\n  const [setAbilityConfigMeta, { loading, data }] = useMutation<{\n    AbilityConfigMeta?: { TypeID: number; Comment: string };\n  }>(\n    gql`\n      mutation($TypeID: Int!, $Comment: String) {\n        AbilityConfigMeta(TypeID: $TypeID, Comment: $Comment) {\n          TypeID\n          Comment\n        }\n      }\n    `,\n    {\n      onCompleted: d => {\n        setValue(d?.AbilityConfigMeta?.Comment || '');\n      },\n    },\n  );\n\n  const [editing, setEditing] = useState(false);\n  const ref = useRef<Input>(null);\n\n  useEffect(() => {\n    if (editing && ref.current) {\n      ref.current.focus();\n    }\n  }, [editing]);\n\n  const handleSave = async () => {\n    await setAbilityConfigMeta({\n      variables: { TypeID: config._InfluenceType, Comment: value },\n    });\n    message.success('修改成功');\n    setEditing(false);\n  };\n\n  return (\n    <tbody className={styles.configRowGroup}>\n      <tr className={styles.cover}>\n        <td\n          colSpan={8}\n          className={classNames({\n            [styles.blank]: !(data\n              ? data.AbilityConfigMeta?.Comment\n              : config.Comment),\n          })}\n        >\n          {editing ? (\n            <Spin spinning={loading}>\n              <Input\n                size=\"small\"\n                ref={ref}\n                value={value}\n                onChange={e => setValue(e.target.value)}\n                onBlur={handleSave}\n                onPressEnter={handleSave}\n              />\n            </Spin>\n          ) : (\n            <div\n              className={classNames(styles.fakeInput, styles.small)}\n              onClick={() => setEditing(true)}\n            >\n              {data ? data.AbilityConfigMeta?.Comment : config.Comment}\n            </div>\n          )}\n        </td>\n      </tr>\n      <tr>\n        <td>{config._InfluenceType}</td>\n        <td>{config._Param1}</td>\n        <td>{config._Param2}</td>\n        <td>{config._Param3}</td>\n        <td>{config._Param4}</td>\n        <td>{config._InvokeType}</td>\n        <td>{config._TargetType}</td>\n      </tr>\n      {(config._Command !== '' || config._ActivateCommand !== '') && (\n        <tr>\n          <td\n            colSpan={3}\n            style={{\n              wordWrap: 'break-word',\n            }}\n          >\n            {config._Command}\n          </td>\n          <td\n            colSpan={4}\n            style={{\n              wordWrap: 'break-word',\n            }}\n          >\n            {config._ActivateCommand}\n          </td>\n        </tr>\n      )}\n    </tbody>\n  );\n};\n\nconst ClassTable: React.FC<{\n  classData: ClassData;\n  onCompleted?: () => any;\n}> = ({ classData, onCompleted }) => {\n  const [showConfigs, setShowConfigs] = useState(false);\n\n  const { isTabletOrMobile } = MediaContext.useContainer();\n\n  const [setClassMeta, { loading }] = useMutation(\n    gql`\n      mutation($ClassID: Int!, $NickNames: [String!]!) {\n        ClassMeta(ClassID: $ClassID, NickNames: $NickNames) {\n          NickNames\n        }\n      }\n    `,\n    { onCompleted },\n  );\n\n  const [value, setValue] = useState(classData.NickNames || []);\n  const [editing, setEditing] = useState(false);\n  const ref = useRef<Select<string[]>>(null);\n\n  useEffect(() => {\n    if (editing && ref.current) {\n      ref.current.focus();\n    }\n  }, [editing]);\n\n  const handleSave = async () => {\n    await setClassMeta({\n      variables: { ClassID: classData.ClassID, NickNames: value },\n    });\n    message.success('修改成功');\n    setEditing(false);\n  };\n\n  return (\n    <table className={styles.table}>\n      <tbody>\n        {isTabletOrMobile && classData.Type && (\n          <tr>\n            <td colSpan={isTabletOrMobile ? 3 : 5}>\n              {CLASS_TYPE[classData.Type]}\n            </td>\n          </tr>\n        )}\n        <tr>\n          {!isTabletOrMobile && (\n            <>\n              <td style={{ width: 200 }}>{CLASS_TYPE[classData.Type]}</td>\n              <th>描述</th>\n            </>\n          )}\n          <th style={{ width: isTabletOrMobile ? '33.33%' : 100 }}>后摇</th>\n          <th style={{ width: isTabletOrMobile ? '33.33%' : 100 }}>被动</th>\n          <th style={{ width: isTabletOrMobile ? '33.33%' : 100 }}>详细</th>\n        </tr>\n        <tr>\n          <th>\n            <small>#{classData.ClassID}</small>\n            {classData.Name}\n          </th>\n          <td\n            colSpan={isTabletOrMobile ? 2 : 1}\n            style={{ textAlign: 'left' }}\n            dangerouslySetInnerHTML={{\n              __html: renderDescription(classData.Explanation),\n            }}\n          />\n          {!isTabletOrMobile && (\n            <>\n              <td>{classData.AttackWait}</td>\n              <td>{classData.ClassAbilityPower1}</td>\n              <td>\n                <Button\n                  type=\"primary\"\n                  size=\"small\"\n                  onClick={() => setShowConfigs(!showConfigs)}\n                  icon={showConfigs ? 'up' : 'down'}\n                />\n              </td>\n            </>\n          )}\n        </tr>\n        {isTabletOrMobile && (\n          <tr>\n            <td>{classData.AttackWait}</td>\n            <td>{classData.ClassAbilityPower1}</td>\n            <td>\n              <Button\n                type=\"primary\"\n                size=\"small\"\n                onClick={() => setShowConfigs(!showConfigs)}\n                icon={showConfigs ? 'up' : 'down'}\n              />\n            </td>\n          </tr>\n        )}\n        {showConfigs && (\n          <tr>\n            <td colSpan={isTabletOrMobile ? 3 : 5}>\n              <Row gutter={8}>\n                <Col xs={24} md={12}>\n                  <table\n                    style={{\n                      tableLayout: 'fixed',\n                    }}\n                    className={styles.table}\n                  >\n                    <tbody>\n                      <tr>\n                        <th style={{ width: '6em' }}>昵称</th>\n                        <td>\n                          {editing ? (\n                            <Spin spinning={loading}>\n                              <Select<string[]>\n                                mode=\"tags\"\n                                tokenSeparators={[',', ' ']}\n                                ref={ref}\n                                value={value}\n                                onChange={v => setValue(v)}\n                                onBlur={handleSave}\n                                style={{ width: '100%' }}\n                              />\n                            </Spin>\n                          ) : (\n                            <div\n                              onClick={() => setEditing(true)}\n                              className={styles.fakeInput}\n                            >\n                              {classData.NickNames &&\n                                classData.NickNames.map((name, index) => (\n                                  <Tag key={index}>{name}</Tag>\n                                ))}\n                            </div>\n                          )}\n                        </td>\n                      </tr>\n                      <tr>\n                        <th>拥有的卡</th>\n                        <td>\n                          {classData.Cards.sort(\n                            (c1, c2) => c2.Rare - c1.Rare,\n                          ).map(card => (\n                            <Link key={card.CardID} to={`/unit/${card.CardID}`}>\n                              <img\n                                alt={card.CardID.toString()}\n                                style={{ width: 40, marginLeft: 8 }}\n                                src={`${ICO_URL}/0/${card.CardID}.png`}\n                              />\n                              {card.Name}\n                            </Link>\n                          ))}\n                        </td>\n                      </tr>\n                      <tr>\n                        <th>职业类型</th>\n                        <td>{classData.AttackAttribute}</td>\n                      </tr>\n                    </tbody>\n                  </table>\n\n                  {classData.Missile && (\n                    <MissileTable missile={classData.Missile} compact />\n                  )}\n                </Col>\n                <Col xs={24} md={12}>\n                  <table\n                    className={styles.table}\n                    style={{\n                      tableLayout: 'fixed',\n                      position: 'relative',\n                    }}\n                  >\n                    <thead>\n                      <tr>\n                        <th>类型</th>\n                        <th>p1</th>\n                        <th>p2</th>\n                        <th>p3</th>\n                        <th>p4</th>\n                        <th>发动</th>\n                        <th>对象</th>\n                      </tr>\n                      <tr>\n                        <th colSpan={3}>条件</th>\n                        <th colSpan={4}>发动条件</th>\n                      </tr>\n                    </thead>\n                    {classData.ClassAbilityConfigs.map((config, index) => (\n                      <AbilityConfigTableRows key={index} config={config} />\n                    ))}\n                  </table>\n                </Col>\n              </Row>\n            </td>\n          </tr>\n        )}\n      </tbody>\n    </table>\n  );\n};\n\nexport default ClassTable;\n","import React, { useEffect, useRef } from 'react';\nimport { Tooltip } from 'antd';\nimport { PLAYER_DOT_URL, ENEMY_DOT_URL } from '../../consts';\nimport { Dot } from '../../interfaces';\nimport { generateTimelines } from '../../utils';\nimport * as GIF from 'gif.js';\n\ninterface DotAnimationProps {\n  dot: Dot;\n  CardID: number;\n  type: 'Player' | 'Enemy';\n}\n\nconst DotAnimation: React.FC<DotAnimationProps> = ({ dot, CardID, type }) => {\n  const canvas = useRef<HTMLCanvasElement>();\n  // const tempCanvas = useRef<HTMLCanvasElement>();\n  const gif = useRef<any>();\n  useEffect(() => {\n    let top = 0;\n    let bottom = 65536;\n    let left = 0;\n    let right = 65536;\n    let canvasWidth = 0;\n    let canvasHeight = 0;\n    const tickNum: number = dot.Length;\n\n    const timelines = generateTimelines(dot);\n    if (timelines.length === 0) {\n      return;\n    }\n\n    timelines.forEach((timeline) => {\n      timeline.forEach((frame) => {\n        left = Math.max(left, frame.Sprite.ParsedX);\n        right = Math.min(\n          right,\n          frame.Sprite.ParsedX - frame.Sprite.Width * frame.Scale.X,\n        );\n\n        top = Math.max(top, frame.Sprite.ParsedY);\n        bottom = Math.min(\n          bottom,\n          frame.Sprite.ParsedY - frame.Sprite.Height * frame.Scale.Y,\n        );\n      });\n    });\n\n    canvasWidth = left - right;\n    canvasHeight = top - bottom;\n\n    canvas.current!.width = canvasWidth;\n    canvas.current!.height = canvasHeight;\n\n    // load image\n    const imageObj = new Image();\n    imageObj.crossOrigin = 'anonymous';\n    imageObj.src = `${\n      type === 'Player' ? PLAYER_DOT_URL : ENEMY_DOT_URL\n    }/${CardID}/sprite.png`;\n\n    const ctx = canvas.current!.getContext('2d') as CanvasRenderingContext2D;\n\n    let currentTick = 0;\n\n    gif.current = new GIF({\n      workers: 2,\n      quality: 1,\n      workerScript: '/gif.worker.js',\n      width: canvasWidth,\n      height: canvasHeight,\n      transparent: 'rgba(0,0,0,0)',\n    }).on('finished', (blob: Blob) => {\n      // crate a anchor\n      const url: string = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.style.display = 'none';\n      a.download = `${CardID}-${dot.Name}.gif`;\n      // and click it\n      a.click();\n    });\n\n    let gifStatus = true;\n    let frameId: number | undefined;\n    const imageLoop = () => {\n      // request next tick\n      if (timelines.length !== 0 && timelines[0].length !== 1)\n        frameId = window.requestAnimationFrame(imageLoop);\n\n      ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\n      timelines.forEach((timeline) => {\n        const frame = timeline[currentTick];\n        const sprite = frame.Sprite;\n        // set alpha\n        ctx.globalAlpha = frame.Alpha;\n        // draw image\n        ctx.drawImage(\n          imageObj,\n          sprite.X,\n          sprite.Y,\n          sprite.Width,\n          sprite.Height,\n          left - sprite.ParsedX,\n          top - sprite.ParsedY,\n          sprite.Width * frame.Scale.X,\n          sprite.Height * frame.Scale.Y,\n        );\n        // restore alpha\n        ctx.globalAlpha = 1;\n      });\n\n      if (gifStatus && currentTick % 2 === 0) {\n        gif.current!.addFrame(ctx, {\n          copy: true,\n          delay: 1000 / 30,\n        });\n      }\n\n      currentTick++;\n\n      if (currentTick > tickNum) {\n        currentTick = 0;\n        gifStatus = false;\n      }\n    };\n\n    imageObj.onload = imageLoop;\n\n    return () => {\n      const cv = canvas.current!;\n      const context = cv.getContext('2d')!;\n      context.clearRect(0, 0, cv.width, cv.height);\n      if (frameId) {\n        window.cancelAnimationFrame(frameId);\n      }\n      imageObj.onload = null;\n      gif.current = null;\n    };\n  }, [dot, CardID, type]);\n\n  return (\n    <div>\n      <Tooltip title=\"点击下载gif\">\n        <canvas\n          ref={(ref) => ref && (canvas.current = ref)}\n          onClick={() => {\n            gif.current?.render();\n          }}\n        />\n      </Tooltip>\n    </div>\n  );\n};\n\nexport default DotAnimation;\n","import React, { useState } from 'react';\nimport { Dot } from 'interfaces';\nimport DotAnimation from 'Components/DotAnimation';\nimport styles from './DotTable.module.less';\nimport { Button } from 'antd';\nimport { PLAYER_DOT_URL, ENEMY_DOT_URL } from 'consts';\n\nconst DotTable: React.FC<{\n  dot: Dot;\n  CardID: number;\n  type: 'Player' | 'Enemy';\n}> = ({ dot, CardID, type }) => {\n  const [showConfigs, setShowConfigs] = useState(false);\n  return (\n    <table className={styles.table}>\n      <thead>\n        <tr>\n          <th colSpan={3}>{dot.Name}</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td style={{ width: 100 }}>{dot.Length}f</td>\n          <td>\n            <DotAnimation type={type} dot={dot} CardID={CardID} />\n          </td>\n          <td style={{ width: 100 }}>\n            <Button\n              type=\"primary\"\n              size=\"small\"\n              onClick={() => setShowConfigs(!showConfigs)}\n              icon={showConfigs ? 'up' : 'down'}\n            />\n          </td>\n        </tr>\n        {showConfigs && (\n          <tr>\n            <td colSpan={3}>\n              {dot.Entries.map((entry, entryIndex) => (\n                <div key={entryIndex}>\n                  {entry.Sprites.map((sprite, index) => {\n                    return (\n                      <div\n                        key={`${entryIndex}-${index}`}\n                        style={{\n                          display: 'inline-block',\n                          width: sprite.Width,\n                          height: sprite.Height,\n                          backgroundImage: `url(\"${\n                            type === 'Player' ? PLAYER_DOT_URL : ENEMY_DOT_URL\n                          }/${CardID}/sprite.png\")`,\n                          backgroundPositionX: -sprite.X,\n                          backgroundPositionY: -sprite.Y,\n                        }}\n                      />\n                    );\n                  })}\n                </div>\n              ))}\n            </td>\n          </tr>\n        )}\n      </tbody>\n    </table>\n  );\n};\n\nexport default DotTable;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { Spin, Input, message } from 'antd';\nimport styles from './Unit.module.less';\n\nconst ConneNameInput: React.FC<{\n  ConneName: string;\n  CardID: number;\n  onCompleted?: () => any;\n}> = ({ ConneName, CardID, onCompleted }) => {\n  const [setCardMeta, { loading: setCardMetaLoading }] = useMutation<{\n    CardMeta: { ConneName?: string; NickNames?: string[] };\n  }>(\n    gql`\n      mutation($CardID: Int!, $ConneName: String, $NickNames: [String!]) {\n        CardMeta(\n          CardID: $CardID\n          ConneName: $ConneName\n          NickNames: $NickNames\n        ) {\n          ConneName\n          NickNames\n        }\n      }\n    `,\n    { onCompleted },\n  );\n  const [editing, setEditing] = useState(false);\n  const [value, setValue] = useState(ConneName);\n  const ref = useRef<Input>(null);\n\n  useEffect(() => {\n    if (editing && ref.current) {\n      ref.current.focus();\n    }\n  }, [editing]);\n\n  const handleSave = async () => {\n    await setCardMeta({\n      variables: { CardID, ConneName: value },\n    });\n    message.success('修改成功');\n    setEditing(false);\n  };\n\n  return editing ? (\n    <Spin spinning={setCardMetaLoading}>\n      <Input\n        ref={ref}\n        value={value}\n        onChange={e => setValue(e.target.value)}\n        onBlur={handleSave}\n        onPressEnter={handleSave}\n      />\n    </Spin>\n  ) : (\n    <div onClick={() => setEditing(true)} className={styles.fakeInput}>\n      {ConneName}\n    </div>\n  );\n};\n\nexport default ConneNameInput;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { Spin, Select, message, Tag } from 'antd';\nimport styles from './Unit.module.less';\n\nconst NickNamesInput: React.FC<{\n  NickNames: string[];\n  CardID: number;\n  onCompleted?: () => any;\n}> = ({ NickNames, CardID, onCompleted }) => {\n  const [setCardMeta, { loading: setCardMetaLoading }] = useMutation<{\n    CardMeta: { ConneName?: string; NickNames?: string[] };\n  }>(\n    gql`\n      mutation($CardID: Int!, $ConneName: String, $NickNames: [String!]) {\n        CardMeta(\n          CardID: $CardID\n          ConneName: $ConneName\n          NickNames: $NickNames\n        ) {\n          ConneName\n          NickNames\n        }\n      }\n    `,\n    { onCompleted },\n  );\n  const [editing, setEditing] = useState(false);\n  const [value, setValue] = useState(NickNames || []);\n  const ref = useRef<Select<string[]>>(null);\n\n  useEffect(() => {\n    if (editing && ref.current) {\n      ref.current.focus();\n    }\n  }, [editing]);\n\n  const handleSave = async () => {\n    await setCardMeta({\n      variables: { CardID, NickNames: value },\n    });\n    message.success('修改成功');\n    setEditing(false);\n  };\n\n  return editing ? (\n    <Spin spinning={setCardMetaLoading}>\n      <Select<string[]>\n        mode=\"tags\"\n        tokenSeparators={[',', ' ']}\n        ref={ref}\n        value={value}\n        onChange={v => setValue(v)}\n        onBlur={handleSave}\n        style={{ width: '100%' }}\n      />\n    </Spin>\n  ) : (\n    <div onClick={() => setEditing(true)} className={styles.fakeInput}>\n      {NickNames &&\n        NickNames.map((name, index) => <Tag key={index}>{name}</Tag>)}\n    </div>\n  );\n};\n\nexport default NickNamesInput;\n","import React, { useState, useRef, useEffect } from 'react';\nimport styles from './Unit.module.less';\nimport { UnitSpeciatyConfig } from 'interfaces';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { Input, message, Spin } from 'antd';\nimport classNames from 'classnames';\n\nconst UnitSpecialtyRows: React.FC<{ config: UnitSpeciatyConfig }> = ({\n  config,\n}) => {\n  const [value, setValue] = useState(config.Comment || '');\n\n  const [setUnitConfigMeta, { loading, data }] = useMutation<{\n    UnitConfigMeta?: { TypeID: number; Comment: string };\n  }>(\n    gql`\n      mutation($TypeID: Int!, $Comment: String) {\n        UnitConfigMeta(TypeID: $TypeID, Comment: $Comment) {\n          TypeID\n          Comment\n        }\n      }\n    `,\n    {\n      onCompleted: d => {\n        setValue(d?.UnitConfigMeta?.Comment || '');\n      },\n    },\n  );\n\n  const [editing, setEditing] = useState(false);\n  const ref = useRef<Input>(null);\n\n  useEffect(() => {\n    if (editing && ref.current) {\n      ref.current.focus();\n    }\n  }, [editing]);\n\n  const handleSave = async () => {\n    await setUnitConfigMeta({\n      variables: { TypeID: config.Type_Specialty, Comment: value },\n    });\n    message.success('修改成功');\n    setEditing(false);\n  };\n\n  return (\n    <tbody className={styles.configRowGroup}>\n      <tr className={styles.cover}>\n        <td\n          colSpan={8}\n          className={classNames({\n            [styles.blank]: !(data\n              ? data.UnitConfigMeta?.Comment\n              : config.Comment),\n          })}\n        >\n          {editing ? (\n            <Spin spinning={loading}>\n              <Input\n                size=\"small\"\n                ref={ref}\n                value={value}\n                onChange={e => setValue(e.target.value)}\n                onBlur={handleSave}\n                onPressEnter={handleSave}\n              />\n            </Spin>\n          ) : (\n            <div\n              className={classNames(styles.fakeInput, styles.small)}\n              onClick={() => setEditing(true)}\n            >\n              {data ? data.UnitConfigMeta?.Comment : config.Comment}\n            </div>\n          )}\n        </td>\n      </tr>\n\n      <tr>\n        <td>{config.Type_Specialty}</td>\n        <td>{config.Value_Specialty}</td>\n        <td>{config.Value_Param1}</td>\n        <td>{config.Value_Param2}</td>\n        <td>{config.Value_Param3}</td>\n        <td>{config.Value_Param4}</td>\n      </tr>\n      {!!config.Command && (\n        <tr>\n          <td colSpan={6}>{config.Command}</td>\n        </tr>\n      )}\n    </tbody>\n  );\n};\n\nconst UnitSpecialtyTable: React.FC<{ configs: UnitSpeciatyConfig[] }> = ({\n  configs,\n}) => {\n  return (\n    <table className={styles.table}>\n      <thead>\n        <tr>\n          <th>类型</th>\n          <th>强度</th>\n          <th>p1</th>\n          <th>p2</th>\n          <th>p3</th>\n          <th>p4</th>\n        </tr>\n        <tr>\n          <th colSpan={6}>cmd</th>\n        </tr>\n      </thead>\n      {configs.map((config, index) => (\n        <UnitSpecialtyRows config={config} key={index} />\n      ))}\n    </table>\n  );\n};\n\nexport default UnitSpecialtyTable;\n","import React, { useEffect, useState } from 'react';\nimport { Button, Icon, Tag, Radio, Row, Col } from 'antd';\nimport _ from 'lodash';\nimport { Link } from 'react-router-dom';\nimport useRouter from 'use-react-router';\nimport {\n  ICO_URL,\n  BONUS_TYPE,\n  PLAYER_STAND_CG_URL,\n  PLAYER_HARLEM_CG_URL,\n} from 'consts';\nimport styles from './Unit.module.less';\nimport { Data, query } from './types';\nimport Rarity from 'Components/Rarity';\nimport Gender from 'Components/Gender';\nimport Loading from 'Components/Loading';\nimport { useQuery } from '@apollo/react-hooks';\nimport classNames from 'classnames';\nimport SkillTable from 'Components/SkillTable';\nimport AbilityTable from 'Components/AbilityTable';\nimport ClassTable from 'Components/ClassTable';\nimport { Card, ClassData } from 'interfaces';\nimport DotTable from 'Components/DotTable';\nimport ConneNameInput from './ConneNameInput';\nimport NickNamesInput from './NickNamesInput';\nimport MediaContext from 'context/MediaContext';\nimport UnitSpecialtyTable from './UnitSpecialtyTable';\n\nfunction countMinMax(\n  min: number,\n  max: number,\n  maxLevel: number,\n  maxLevelUnit: number,\n  mod: number,\n) {\n  return [\n    Math.ceil((mod / 100) * (min + (max - min) * (1 / maxLevel))),\n    Math.ceil((mod / 100) * (min + (max - min) * (maxLevelUnit / maxLevel))),\n  ];\n}\n\nfunction classDataToUnit(\n  classData: ClassData,\n  card: Card,\n  nearRange?: { [k: string]: number },\n) {\n  let maxLevelUnit = 0;\n  switch (classData.Type) {\n    case 'Evo2a':\n    case 'Evo2b':\n      maxLevelUnit = 99;\n      break;\n    case 'Evo':\n      if (card.Rare === 3) maxLevelUnit = 80;\n      if (card.Rare === 4) maxLevelUnit = 90;\n      if (card.Rare === 5) maxLevelUnit = 99;\n      if (card.Rare === 7) maxLevelUnit = 85;\n      if (card.Rare === 10) maxLevelUnit = 90;\n      if (card.Rare === 11) maxLevelUnit = 99;\n      break;\n    case 'Init':\n      if (card.Rare === 0) {\n        maxLevelUnit = 30;\n        break;\n      }\n      if (card.Rare === 1) {\n        maxLevelUnit = 40;\n        break;\n      }\n      if (\n        classData.Data_ExtraAwakeOrbs.length === 0 &&\n        classData.JobChange !== 0\n      ) {\n        maxLevelUnit = 50;\n        break;\n      }\n    // eslint-disable-next-line no-fallthrough\n    case 'CC':\n      if (card.Rare === 2) maxLevelUnit = 55;\n      if (card.Rare === 3) maxLevelUnit = 60;\n      if (card.Rare === 4) maxLevelUnit = 70;\n      if (card.Rare === 5) maxLevelUnit = classData.MaxLevel;\n      if (card.Rare === 7) maxLevelUnit = 65;\n      break;\n  }\n\n  return {\n    ...classData,\n    HP: countMinMax(\n      classData.InitHP,\n      classData.MaxHP,\n      classData.MaxLevel,\n      maxLevelUnit,\n      card.MaxHPMod,\n    ),\n    Atk: countMinMax(\n      classData.InitAtk,\n      classData.MaxAtk,\n      classData.MaxLevel,\n      maxLevelUnit,\n      card.AtkMod,\n    ),\n    Def: countMinMax(\n      classData.InitDef,\n      classData.MaxDef,\n      classData.MaxLevel,\n      maxLevelUnit,\n      card.DefMod,\n    ),\n    Cost: [\n      classData.Cost + card.CostModValue,\n      classData.Cost + card.CostModValue - card.CostDecValue,\n    ],\n    range:\n      nearRange && nearRange[classData.Type] !== 0\n        ? nearRange[classData.Type]\n        : classData.AtkArea,\n    maxLevelUnit,\n  };\n}\n\nconst getStatus = (card: Data['Card']) => {\n  const { BattleStyle } = card.Classes[0];\n  const ranges = BattleStyle && {\n    Init: BattleStyle._Range_01,\n    CC: BattleStyle._Range_02,\n    Evo: BattleStyle._Range_03,\n    Evo2a: BattleStyle._Range_04,\n    Evo2b: BattleStyle._Range_05,\n  };\n  // const rarity = card.Rare\n\n  const classes = [...card.Classes];\n\n  if (card._AwakePattern === 1 || card._AwakePattern === 2) {\n    const index = classes.findIndex(\n      (cl) => cl.Type === `Evo2${card._AwakePattern === 1 ? 'b' : 'a'}`,\n    );\n    if (classes.length >= 4) classes.splice(index, 1);\n  }\n\n  return classes.map((cl) => classDataToUnit(cl, card, ranges));\n};\n\nconst Unit: React.FC = () => {\n  const { match } = useRouter<{ CardID: string }>();\n  const CardID = Number.parseInt(match.params.CardID, 10);\n\n  const [currentImg, setCurrentImg] = useState('');\n  const [currentText, setCurrentText] = useState<number>();\n\n  const [avatars, setAvatars] = useState([0, 1, 2, 3]);\n\n  const { isTabletOrMobile } = MediaContext.useContainer();\n\n  const { loading, data, refetch } = useQuery<Data>(query, {\n    variables: { id: CardID },\n    fetchPolicy: 'network-only',\n  });\n\n  if (data) {\n    if (data.Card.Rare >= 10)\n      data.Card.Classes = data.Card.Classes.filter((cl) => cl.Type === 'Evo');\n  }\n\n  useEffect(() => {\n    if (data?.Card.ImageStand?.[0]) {\n      setCurrentImg(data.Card.ImageStand[0])\n    }\n  }, [data])\n\n  return (\n    <div className={styles.container}>\n      <Loading spinning={loading}>\n        {data && !_.isEmpty(data) && (\n          <div>\n            <h1 className=\"unit-title\">\n              <Link to={`/quest/${CardID - 1}`}>\n                <Icon type=\"left\" />\n              </Link>\n\n              <Gender gender={data.Card.Kind} />\n              <div style={{ display: 'inline-block' }}>\n                <Rarity rare={data.Card.Rare} />\n                <div>{data.Card.Name}</div>\n              </div>\n              <Link to={`/unit/${CardID + 1}`}>\n                <Icon type=\"right\" />\n              </Link>\n            </h1>\n            <p>\n              {data.Card.RaceName && (\n                <span>\n                  <Tag>{data.Card.RaceName}</Tag>\n                </span>\n              )}\n              {data.Card.AssignName && (\n                <span>\n                  <Tag color=\"magenta\">{data.Card.AssignName}</Tag>\n                </span>\n              )}\n              {data.Card.IdentityName && (\n                <span>\n                  <Tag color=\"black\">{data.Card.IdentityName}</Tag>\n                </span>\n              )}\n              {data.Card.GenusName && (\n                <span>\n                  <Tag color=\"blue\">{data.Card.GenusName}</Tag>\n                </span>\n              )}\n            </p>\n            <div className={styles.previewContainer}>\n              <div\n                className={classNames(styles.outerRadioContainer, {\n                  [styles.inset]: !isTabletOrMobile,\n                })}\n              >\n                <div className={styles.radioContainer}>\n                  <Radio.Group\n                    onChange={(e) => setCurrentImg(e.target.value)}\n                    value={currentImg}\n                    className={styles.radioGroup}\n                  >\n                    {data.Card.ImageStand.map((imgName, index) => (\n                      <Radio.Button key={imgName} value={imgName}>\n                        立绘\n                        {Number.parseInt(imgName[imgName.length - 5], 10) + 1}\n                      </Radio.Button>\n                    ))}\n                  </Radio.Group>\n                  <Radio.Group\n                    onChange={(e) => setCurrentImg(e.target.value)}\n                    value={currentImg}\n                    className={classNames(styles.radioGroup, styles.danger)}\n                  >\n                    {data.Card.ImageCG.map((imgName, index) => (\n                      <Radio.Button key={imgName} value={imgName}>\n                        CG{Number.parseInt(imgName[imgName.length - 5], 10) + 1}\n                      </Radio.Button>\n                    ))}\n                  </Radio.Group>\n                </div>\n                <div className={styles.radioContainer}>\n                  <Radio.Group\n                    onChange={(e) => setCurrentText(e.target.value)}\n                    value={currentText}\n                    className={styles.radioGroup}\n                  >\n                    {data.Card.HarlemTextA.map((_, index) => (\n                      <Radio.Button key={`a${index}`} value={index}>\n                        表{index + 1}\n                      </Radio.Button>\n                    ))}\n                  </Radio.Group>\n                  <Radio.Group\n                    onChange={(e) => setCurrentText(e.target.value)}\n                    value={currentText}\n                    className={classNames(styles.radioGroup, styles.danger)}\n                  >\n                    {data.Card.HarlemTextR.map((_, index) => (\n                      <Radio.Button key={`r${index}`} value={index + 10}>\n                        里{index + 1}\n                      </Radio.Button>\n                    ))}\n                  </Radio.Group>\n                </div>\n              </div>\n              <div className={styles.outerImageContainer}>\n                <div className={styles.imageContainer}>\n                  {currentText !== undefined && (\n                    <div\n                      className={classNames(styles.textContainer, {\n                        [styles.fullScreen]: isTabletOrMobile,\n                      })}\n                    >\n                      <Button\n                        ghost\n                        shape=\"circle\"\n                        onClick={() => setCurrentText(undefined)}\n                        className={styles.closeButton}\n                      >\n                        <Icon type=\"close\" />\n                      </Button>\n                      <div\n                        className={styles.text}\n                        dangerouslySetInnerHTML={{\n                          __html: (currentText < 10\n                            ? data.Card.HarlemTextA[currentText]\n                            : data.Card.HarlemTextR[currentText - 10]\n                          )\n                            .replace(\n                              /([＠@].*\\r?\\n)/g,\n                              (match, p1) =>\n                                `<span style=\"font-weight: bold\">${p1}</span>`,\n                            )\n                            .replace(/\\r?\\n/g, '<br />'),\n                        }}\n                      />\n                    </div>\n                  )}\n                  <img\n                    style={{ height: '100%' }}\n                    src={\n                      currentImg.includes('card')\n                        ? `${PLAYER_STAND_CG_URL}/${currentImg}`\n                        : `${PLAYER_HARLEM_CG_URL}/${currentImg}`\n                    }\n                    alt={currentImg.toString()}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <table className={styles.table}>\n              <tbody>\n                <tr>\n                  <th>大头贴</th>\n                  <td colSpan={5}>\n                    {avatars.map((avatar) => (\n                      <img\n                        key={avatar}\n                        src={`${ICO_URL}/${avatar}/${CardID}.png`}\n                        alt={`${CardID}-${avatar}`}\n                        onError={() => {\n                          const index = avatars.findIndex((a) => a === avatar);\n                          setAvatars([\n                            ...avatars.slice(0, index),\n                            ...avatars.slice(index + 1),\n                          ]);\n                        }}\n                      />\n                    ))}\n                  </td>\n                </tr>\n                <tr>\n                  <th>画师</th>\n                  <td colSpan={5}>{data.Card.IllustName}</td>\n                </tr>\n                <tr>\n                  <th>昵称</th>\n                  <td colSpan={5}>\n                    <NickNamesInput\n                      NickNames={data.Card.NickNames}\n                      CardID={CardID}\n                      onCompleted={refetch}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <th>圆爹名</th>\n                  <td colSpan={5}>\n                    <ConneNameInput\n                      ConneName={data.Card.ConneName}\n                      CardID={CardID}\n                      onCompleted={refetch}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <th>手料理</th>\n                  <td colSpan={5}>{data.Card.HomeCooking}</td>\n                </tr>\n                <tr>\n                  <th>金币</th>\n                  <td colSpan={2}>{data.Card.SellPrice}</td>\n                  <th>虹水晶</th>\n                  <td colSpan={2}>{data.Card._TradePoint}</td>\n                </tr>\n                <tr>\n                  <th>魔抗</th>\n                  <td colSpan={5}>{data.Card.MagicResistance}</td>\n                </tr>\n                <tr>\n                  <th>HP补正</th>\n                  <td>{data.Card.MaxHPMod / 100}</td>\n                  <th>Atk补正</th>\n                  <td>{data.Card.AtkMod / 100}</td>\n                  <th>Def补正</th>\n                  <td>{data.Card.DefMod / 100}</td>\n                </tr>\n                <tr>\n                  <th>好感1</th>\n                  <td>\n                    {data.Card.BonusType !== 0 &&\n                      BONUS_TYPE.get(data.Card.BonusType).replace(\n                        '%d',\n                        Math.ceil(data.Card.BonusNum * 1.2),\n                      )}\n                  </td>\n                  <th>好感2</th>\n                  <td>\n                    {data.Card.BonusType2 !== 0 &&\n                      BONUS_TYPE.get(data.Card.BonusType2).replace(\n                        '%d',\n                        Math.ceil(data.Card.BonusNum2 * 1.2),\n                      )}\n                  </td>\n                  <th>好感150</th>\n                  <td>\n                    {data.Card.BonusType3 !== 0 &&\n                      BONUS_TYPE.get(data.Card.BonusType3).replace(\n                        '%d',\n                        Math.ceil(data.Card.BonusNum3),\n                      )}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n\n            <table className={styles.table}>\n              <thead>\n                <tr>\n                  <th>职业名</th>\n                  <th>等级</th>\n                  <th>HP</th>\n                  <th>攻击</th>\n                  <th>防御</th>\n                  <th>射程</th>\n                  <th>档数</th>\n                  <th>Cost</th>\n                </tr>\n              </thead>\n              <thead>\n                {getStatus(data.Card).map((st, index) => (\n                  <React.Fragment key={st.ClassID}>\n                    <tr>\n                      <td rowSpan={2}>\n                        {st.Type === 'Evo2a' && (\n                          <span style={{ color: '#1890ff' }}>(A) </span>\n                        )}\n                        {st.Type === 'Evo2b' && (\n                          <span style={{ color: '#52c41a' }}>(B) </span>\n                        )}\n                        {st.Name}\n                      </td>\n                      <td>1</td>\n                      <td>{st.HP[0]}</td>\n                      <td>{st.Atk[0]}</td>\n                      <td>{st.Def[0]}</td>\n                      <td rowSpan={2}>{st.range}</td>\n                      <td rowSpan={2}>{st.BlockNum}</td>\n                      <td rowSpan={2}>\n                        {st.Cost[0]}/{st.Cost[1]}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>{st.maxLevelUnit}</td>\n                      <td>{st.HP[1]}</td>\n                      <td>{st.Atk[1]}</td>\n                      <td>{st.Def[1]}</td>\n                    </tr>\n                  </React.Fragment>\n                ))}\n              </thead>\n            </table>\n\n            <div>\n              <h2>技能</h2>\n              {data.Card.Skills.map((skillWithType, index) => (\n                <SkillTable\n                  skills={skillWithType.Skills}\n                  type={skillWithType.Type}\n                  key={index}\n                />\n              ))}\n            </div>\n\n            <div>\n              <h2>被动</h2>\n              {_.uniqBy(data.Card.Abilities, 'AbilityID').map((ability) => (\n                <AbilityTable key={ability.AbilityID} ability={ability} />\n              ))}\n            </div>\n\n            {data.Card.SpecialtyConfigs.length > 0 && (\n              <div>\n                <h2>单位设置</h2>\n                <UnitSpecialtyTable configs={data.Card.SpecialtyConfigs} />\n              </div>\n            )}\n\n            <div>\n              <h2>职业</h2>\n              {data.Card.Classes.map((cl) => (\n                <ClassTable\n                  classData={cl}\n                  key={cl.ClassID}\n                  onCompleted={refetch}\n                />\n              ))}\n            </div>\n\n            {data.Card.Dots && (\n              <div>\n                <h2>点阵</h2>\n                <Row gutter={8}>\n                  {data.Card.Dots.map((dot, index) => (\n                    <Col key={index} sm={24} md={12}>\n                      <DotTable\n                        dot={dot}\n                        CardID={data.Card.CardID}\n                        type=\"Player\"\n                      />\n                    </Col>\n                  ))}\n                </Row>\n              </div>\n            )}\n          </div>\n        )}\n      </Loading>\n    </div>\n  );\n};\n\nexport default Unit;\n","import React, { useState, useEffect } from 'react';\nimport { Layout, Input, Row, Col, Icon, Drawer, Tag } from 'antd';\nimport { FixedSizeList as List } from 'react-window';\nimport gql from 'graphql-tag';\nimport useRouter from 'use-react-router';\nimport classNames from 'classnames';\nimport { useMediaQuery } from 'react-responsive';\nimport { Card } from './types';\nimport UnitListCard from './UnitListCard';\nimport styles from './UnitList.module.less';\nimport Unit from '../Unit';\nimport Loading from '../../Loading';\nimport { useQuery } from '@apollo/react-hooks';\n\nconst { Content } = Layout;\n\ninterface Data {\n  Cards: Card[];\n}\n\ninterface Props {\n  data?: Data;\n  loading: boolean;\n}\n\nconst FILTER_TYPE: { [k: string]: string } = {\n  Rare: '稀有',\n  RaceName: '种族',\n  AssignName: '出身',\n  GenusName: '限定',\n  IdentityName: '属性',\n  IllustName: '画师',\n  'Classes.0.Name': '职业',\n};\n\nconst UnitList: React.FC<Props> = ({ data, loading }) => {\n  const [sorter, setSorter] = useState({ key: 'CardID', order: true });\n  const [search, setSearch] = useState('');\n  const [filters, setFilters] = useState<\n    Array<{ content: string; type: string }>\n  >([]);\n\n  // 两个变量react-window用\n  const [size, setSize] = useState({ width: 0, height: 0 });\n  const [scrolled, setScrolled] = useState(0);\n\n  const { match, history } = useRouter<{ CardID: string }>();\n  const { CardID } = match.params;\n\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 991px)' });\n\n  useEffect(() => {\n    const main = document.getElementsByTagName('main')[0];\n    const handleResize = () => {\n      const width = main.offsetWidth - 60;\n      const height = main.offsetHeight - 150;\n      setSize({ width, height });\n    };\n    window.onresize = handleResize;\n    handleResize();\n    return () => {\n      window.onresize = null;\n    };\n  }, []);\n\n  // 生成表头\n  const genSorter = (title: string, key: string) => {\n    return (\n      <div\n        style={{ cursor: 'pointer' }}\n        onClick={() =>\n          setSorter({ key, order: key === sorter.key ? !sorter.order : true })\n        }\n      >\n        {title}\n        {sorter.key === key && (\n          <Icon type={sorter.order ? 'caret-down' : 'caret-up'} />\n        )}\n      </div>\n    );\n  };\n\n  const getParam = (target: any, keys: string) => {\n    keys.split('.').forEach((st: string) => (target = target[st]));\n    return target;\n  };\n\n  const cardSorter = (cardA: any, cardB: any) => {\n    const { key, order } = sorter;\n    const paramA = getParam(cardA, key);\n    const paramB = getParam(cardB, key);\n    if (typeof paramA === 'number') {\n      return order ? paramA - paramB : paramB - paramA;\n    } else {\n      if (paramA > paramB) {\n        return order ? 1 : -1;\n      } else if (paramA < paramB) {\n        return order ? -1 : 1;\n      } else {\n        return 0;\n      }\n    }\n  };\n\n  const cardFilter = (card: any) => {\n    let flag = JSON.stringify(card).includes(search);\n\n    filters.forEach((filter) => {\n      const { type, content } = filter;\n      const sourceValue = getParam(card, type);\n      let parsedValue: number | string = content;\n      if (typeof sourceValue === 'number') {\n        parsedValue = Number.parseInt(parsedValue, 10);\n      }\n      flag = flag && sourceValue === parsedValue;\n    });\n    return flag;\n  };\n\n  const handleSetFilter = (content: string, type: string) => {\n    const filter = filters.find(\n      (f) => f.content === content && f.type === type,\n    );\n    if (!filter) {\n      setFilters((fs) => [...fs, { content, type }]);\n    }\n  };\n\n  const showUnit = (cardID: string) => {\n    history.push({\n      pathname: `/unit/${cardID}`,\n      state: { modal: true },\n    });\n  };\n\n  const cards =\n    (data &&\n      data.Cards &&\n      data.Cards.slice()\n        .map((card) => ({\n          ...card,\n          CardID: Number.parseInt(card.CardID, 10),\n        }))\n        .sort(cardSorter)\n        .filter(cardFilter)) ||\n    [];\n\n  return (\n    <Content className={styles.unitListContent}>\n      <Input\n        placeholder=\"搜索单位\"\n        value={search}\n        onChange={(event) => setSearch(event.target.value)}\n      />\n      <div className={styles.filterContainer}>\n        {filters.map((filter, index) => {\n          return (\n            <Tag\n              key={index + filter.content}\n              closable\n              onClose={() => {\n                const i = filters.findIndex(\n                  (f) => f.content === filter.content && f.type === filter.type,\n                );\n                setFilters([...filters.slice(0, i), ...filters.slice(i + 1)]);\n              }}\n            >\n              {FILTER_TYPE[filter.type]}：{filter.content}\n            </Tag>\n          );\n        })}\n      </div>\n      <Row\n        className={classNames(styles.sorterBlock, {\n          [styles.shadow]: scrolled !== 0,\n        })}\n      >\n        <Col md={4} xs={8}>\n          {genSorter('#', 'CardID')}\n        </Col>\n        <Col md={4} xs={16}>\n          {genSorter('名称', 'Name')}\n        </Col>\n        <Col lg={6} xs={0}>\n          {genSorter('种族', 'Race')}\n        </Col>\n        <Col lg={5} md={8} xs={0}>\n          {genSorter('职业', 'Class[0].Name')}\n        </Col>\n        <Col lg={5} md={8} xs={0}>\n          {genSorter('画师', 'Illust')}\n        </Col>\n      </Row>\n      <div className={styles.listContainer}>\n        {!loading ? (\n          <List\n            height={size.height}\n            itemCount={cards.length}\n            itemSize={68}\n            width={size.width}\n            onScroll={({ scrollOffset }) => setScrolled(scrollOffset)}\n          >\n            {({ index, style }) => (\n              <div key={cards[index].CardID} style={style}>\n                <UnitListCard\n                  card={{\n                    ...cards[index],\n                    CardID: String(cards[index].CardID),\n                  }}\n                  showUnit={showUnit}\n                  setFilter={handleSetFilter}\n                />\n              </div>\n            )}\n          </List>\n        ) : (\n          <Loading />\n        )}\n      </div>\n      <Drawer\n        width={isTabletOrMobile ? '100%' : '80%'}\n        visible={!!CardID}\n        destroyOnClose\n        onClose={() => history.push('/unit')}\n        getContainer={false}\n        style={{ position: 'absolute' }}\n      >\n        {CardID && <Unit />}\n      </Drawer>\n    </Content>\n  );\n};\n\nconst UnitListWrapper: React.FC = (props) => {\n  const { data, loading } = useQuery(\n    gql`\n      query {\n        Cards {\n          CardID\n          Name\n          Rare\n          Kind\n          IllustName\n          RaceName\n          AssignName\n          IdentityName\n          GenusName\n          NickNames\n          Classes {\n            Name\n          }\n        }\n      }\n    `,\n  );\n  return <UnitList {...props} data={data} loading={loading} />;\n};\n\nexport default UnitListWrapper;\n","export const MISSION_TYPE: { [k: string]: string } = {\n  Assault: '投票讨伐',\n  Story: '主线',\n  Emergency: '紧急',\n  Reproduce: '复刻',\n  DailyReproduce: '每日复刻',\n  Subjugation: '大讨伐',\n  DevilAdvent: '魔神',\n  Harlem: '交流',\n  Daily: '曜日',\n  Challenge: '挑战',\n  Tutorial: '教程',\n  Tower: '英杰之塔',\n  Raid: '神兽',\n};\n\nexport interface QuestData {\n  Name: string;\n  QuestID: number;\n  Charisma: number;\n  ActionPoint: number;\n}\n","import React from 'react';\nimport { Spin, Tag } from 'antd';\nimport gql from 'graphql-tag';\nimport { QuestData } from './types';\nimport useRouter from 'use-react-router';\nimport { useQuery } from '@apollo/react-hooks';\nimport styles from './QuestList.module.less';\n\nconst MissionShutter: React.FC<{ mission: any; isTabletOrMobile: boolean }> = ({\n  mission,\n  isTabletOrMobile,\n}) => {\n  const { history } = useRouter();\n\n  const showQuest = (questID: number) => {\n    history.push(`/quest/${questID}`);\n  };\n\n  const { loading, data } = useQuery<{ Mission: { Quests: QuestData[] } }>(\n    gql`\n      query($MissionID: Int!) {\n        Mission(MissionID: $MissionID) {\n          Quests {\n            Name\n            QuestID\n            Charisma\n            ActionPoint\n          }\n        }\n      }\n    `,\n    { variables: { MissionID: mission.MissionID } },\n  );\n  return loading ? (\n    <Spin />\n  ) : data!.Mission.Quests.length === 0 ? (\n    <div>该战役下没有关卡。</div>\n  ) : (\n    <div>\n      {data!.Mission.Quests.map(quest => (\n        <div\n          key={quest.QuestID}\n          className={styles.listCard}\n          onClick={showQuest.bind(null, quest.QuestID)}\n        >\n          <span>{quest.QuestID}</span>\n          &nbsp;\n          <strong>{quest.Name}</strong>\n          <div\n            style={{\n              display: isTabletOrMobile ? 'block' : 'inline-block',\n              float: isTabletOrMobile ? 'none' : 'right',\n            }}\n          >\n            {quest.Charisma !== 0 && <Tag color=\"green\">{quest.Charisma}</Tag>}\n            {quest.ActionPoint !== 0 && (\n              <Tag color=\"red\">{quest.ActionPoint}</Tag>\n            )}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default MissionShutter;\n","import React from 'react';\nimport { ICO_URL, BATTLE_TALK_EVENT_URL } from 'consts';\nimport { renderDescription } from 'utils';\n\nconst TalkRow: React.FC<{\n  talk: { Name: string; FaceID: number; Message: string };\n  MissionID: number;\n  isTabletOrMobile: boolean;\n}> = ({ talk, MissionID, isTabletOrMobile }) => {\n  return (\n    <tr>\n      <th>\n        {talk.Name}\n        <img\n          style={{\n            display: 'block',\n            margin: 'auto',\n            width: '100%',\n          }}\n          alt={talk.FaceID.toString()}\n          src={\n            talk.FaceID >= 2000\n              ? `${ICO_URL}/0/${talk.FaceID - 2000}.png`\n              : talk.FaceID >= 1000\n              ? `${ICO_URL}/0/${talk.FaceID - 1000}.png`\n              : `${BATTLE_TALK_EVENT_URL}/${MissionID}/${talk.FaceID}.png`\n          }\n        />\n      </th>\n      <td colSpan={9}>\n        <div\n          dangerouslySetInnerHTML={{\n            __html: renderDescription(talk.Message),\n          }}\n          style={{\n            margin: 'auto',\n            textAlign: 'left',\n            maxWidth: '30em',\n          }}\n        />\n      </td>\n    </tr>\n  );\n};\n\nexport default TalkRow;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { Button, Divider, Row, Col, Switch, Input, message, Spin } from 'antd';\nimport { ICO_URL, ENEMY_DOT_URL, ENEMY_CHANGE_COND } from 'consts';\nimport styles from './Quest.module.less';\nimport {\n  Dot,\n  Enemy,\n  MapEntry,\n  EnemySpecialtyConfig,\n  MapRoute,\n} from 'interfaces';\nimport { useMediaQuery } from 'react-responsive';\nimport DotTable from 'Components/DotTable';\nimport TalkRow from 'Components/TalkRow';\nimport { Quest as QuestType } from 'interfaces';\nimport MissileTable from 'Components/MissileTable';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport classNames from 'classnames';\n\nconst getAttackSpeed = (enemy: Enemy & MapEntry, dots: Dot[]) => {\n  let length = 0;\n  for (const dot of dots) {\n    if (dot.Name === 'Attack') {\n      length = dot.Length;\n    }\n  }\n  // don't know why\n  if (!length) {\n    return null;\n  }\n  let attackSpeed = enemy.AttackWait * 2 + length;\n  if (!enemy.ATTACK_RANGE) {\n    attackSpeed += enemy.ATTACK_SPEED;\n  }\n  return attackSpeed;\n};\n\nconst EnemyConfigTableRows: React.FC<{ config: EnemySpecialtyConfig }> = ({\n  config,\n}) => {\n  const [value, setValue] = useState(config.Comment || '');\n\n  const [setEnemyConfigMeta, { loading, data }] = useMutation<{\n    EnemyConfigMeta?: { TypeID: number; Comment: string };\n  }>(\n    gql`\n      mutation($TypeID: Int!, $Comment: String) {\n        EnemyConfigMeta(TypeID: $TypeID, Comment: $Comment) {\n          TypeID\n          Comment\n        }\n      }\n    `,\n    {\n      onCompleted: (d) => {\n        setValue(d?.EnemyConfigMeta?.Comment || '');\n      },\n    },\n  );\n\n  const [editing, setEditing] = useState(false);\n  const ref = useRef<Input>(null);\n\n  useEffect(() => {\n    if (editing && ref.current) {\n      ref.current.focus();\n    }\n  }, [editing]);\n\n  const handleSave = async () => {\n    await setEnemyConfigMeta({\n      variables: { TypeID: config.Type_Influence, Comment: value },\n    });\n    message.success('修改成功');\n    setEditing(false);\n  };\n\n  return (\n    <tbody className={styles.configRowGroup}>\n      <tr className={styles.cover}>\n        <td\n          colSpan={8}\n          className={classNames({\n            [styles.blank]: !(data\n              ? data.EnemyConfigMeta?.Comment\n              : config.Comment),\n          })}\n        >\n          {editing ? (\n            <Spin spinning={loading}>\n              <Input\n                size=\"small\"\n                ref={ref}\n                value={value}\n                onChange={(e) => setValue(e.target.value)}\n                onBlur={handleSave}\n                onPressEnter={handleSave}\n              />\n            </Spin>\n          ) : (\n            <div\n              className={classNames(styles.fakeInput, styles.small)}\n              onClick={() => setEditing(true)}\n            >\n              {data ? data.EnemyConfigMeta?.Comment : config.Comment}\n            </div>\n          )}\n        </td>\n      </tr>\n\n      <tr>\n        <td>{config.Type_Influence}</td>\n        <td>{config.Param_1}</td>\n        <td>{config.Param_2}</td>\n        <td>{config.Param_3}</td>\n        <td>{config.Param_4}</td>\n      </tr>\n\n      {!!(config._Expression || config._ExtParam) && (\n        <tr>\n          <td colSpan={3}>{config._Expression}</td>\n          <td colSpan={2}>{config._ExtParam}</td>\n        </tr>\n      )}\n    </tbody>\n  );\n};\n\ninterface EnemyTableRowsProps {\n  enemies: Array<Enemy & MapEntry>;\n  drops: string[];\n  isTabletOrMobile: boolean;\n  routes: MapRoute[][];\n}\n\n// enemy group (with change)\nconst EnemyTableRows: React.FC<EnemyTableRowsProps> = ({\n  enemies,\n  drops,\n  isTabletOrMobile,\n  routes,\n}) => {\n  const [expand, setExpand] = useState(false);\n  const [showTable, setShowTable] = useState<boolean[]>(\n    Array(enemies.length).fill(false),\n  );\n\n  const routeNos = [enemies[0].RouteNo];\n  let f = false;\n  for (let i = 0; i < routeNos.length; i++) {\n    const routeNo = routeNos[i];\n    for (const route of routes[routeNo]) {\n      // 循环route\n      if (route.RouteID !== 0 && (!routeNos.includes(route.RouteID) || !f)) {\n        if (routeNos.includes(route.RouteID)) {\n          f = true;\n        }\n        routeNos.push(route.RouteID);\n        break;\n      }\n    }\n  }\n\n  return (\n    <>\n      {enemies.slice(0, expand ? enemies.length : 1).map((e, index) => {\n        const dots = e.Dots;\n        const previewSprite = dots[0].Entries[0].Sprites[0];\n        const types = [\n          e.SkyFlag && '飛行',\n          e.EnemyElem._EnemyElementName,\n          e.EnemyType._EnemyTypeName,\n          e._Attribute,\n        ]\n          .filter((st) => st && st !== 'なし')\n          .join(' ');\n        const changeCondition = e.Param_ChangeParam\n          ? ENEMY_CHANGE_COND[e.Param_ChangeCondition]\n          : null;\n        const imgID = (e.PatternID >> 8) % 4096;\n        const dropImg =\n          e.PrizeCardID !== 0 ? (\n            <img\n              src={drops[e.PrizeCardID - 1]}\n              alt={e.PrizeCardID.toString()}\n              style={{ width: 40 }}\n            />\n          ) : null;\n        return (\n          <React.Fragment key={index}>\n            <tr\n              className={styles.compact}\n              style={{ cursor: 'pointer' }}\n              onClick={() =>\n                setShowTable((st) =>\n                  st.map((v, i) => {\n                    if (i === index) return !v;\n                    return v;\n                  }),\n                )\n              }\n            >\n              <td style={{ textAlign: 'left' }}>\n                {enemies.length > 1 && index === 0 && (\n                  <Button\n                    icon={expand ? 'minus' : 'plus'}\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      setExpand((e) => !e);\n                    }}\n                    style={{\n                      width: 20,\n                      height: 20,\n                      fontSize: 10,\n                      marginRight: 5,\n                    }}\n                  />\n                )}\n                {enemies.length > 1 && index !== 0 && (\n                  <Divider style={{ margin: '0 12.5px' }} type=\"vertical\" />\n                )}\n                <div\n                  style={{\n                    display: 'inline-block',\n                    width: previewSprite.Width,\n                    height: previewSprite.Height,\n                    backgroundImage: `url(\"${ENEMY_DOT_URL}/${imgID}/sprite.png\")`,\n                    backgroundPositionX: -previewSprite.X,\n                    backgroundPositionY: -previewSprite.Y,\n                    zoom: Math.min(\n                      40 / previewSprite.Height,\n                      40 / previewSprite.Width,\n                    ),\n                    verticalAlign: 'middle',\n                  }}\n                />\n              </td>\n              {!isTabletOrMobile && <td>{types}</td>}\n              <td>\n                {getAttackSpeed(e, dots)}\n                <br />\n                {Math.ceil((e.ATTACK_RANGE * e.DotRate) / 1.5)}\n              </td>\n              <td>{e.HP}</td>\n              <td\n                style={{\n                  background:\n                    e.TypeAttack === 300\n                      ? '#ffdad2'\n                      : e.MagicAttack\n                      ? '#c8f1bb'\n                      : '#ccecff',\n                }}\n              >\n                {e.ATTACK_POWER}\n              </td>\n              <td>\n                {e.ARMOR_DEFENSE}\n                <br />\n                {e.MAGIC_DEFENSE}\n              </td>\n              <td>{e.Param_ResistanceAssassin}</td>\n              {!isTabletOrMobile && <td>{dropImg}</td>}\n              {!isTabletOrMobile && <td>{changeCondition}</td>}\n            </tr>\n            {showTable[index] && (\n              <tr>\n                <td colSpan={9} style={{ paddingTop: 0, paddingBottom: 0 }}>\n                  <Row gutter={8}>\n                    <Col xs={24} md={12}>\n                      <table className={styles.table}>\n                        <tbody>\n                          <tr>\n                            <th>类型</th>\n                            <td>{types}</td>\n                          </tr>\n                          {changeCondition && (\n                            <tr>\n                              <th>切换条件</th>\n                              <td>{changeCondition}</td>\n                            </tr>\n                          )}\n                          <tr>\n                            <th>循环数量</th>\n                            <td>{e.Loop}</td>\n                          </tr>\n                          <tr>\n                            <th>路线</th>\n                            <td>{routeNos.join('->')}</td>\n                          </tr>\n                          {e.PrizeCardID !== 0 && (\n                            <tr>\n                              <th>掉落</th>\n                              <td>{dropImg}</td>\n                            </tr>\n                          )}\n                        </tbody>\n                      </table>\n\n                      {e.SpecialtyConfigs.length > 0 && (\n                        <table\n                          className={styles.table}\n                          style={{\n                            tableLayout: 'fixed',\n                            position: 'relative',\n                          }}\n                        >\n                          <thead>\n                            <tr>\n                              <th>类型</th>\n                              <th>p1</th>\n                              <th>p2</th>\n                              <th>p3</th>\n                              <th>p4</th>\n                            </tr>\n                            <tr>\n                              <th colSpan={3}>cmd</th>\n                              <th colSpan={2}>...p</th>\n                            </tr>\n                          </thead>\n                          {e.SpecialtyConfigs.map((config, index) => (\n                            <EnemyConfigTableRows key={index} config={config} />\n                          ))}\n                        </table>\n                      )}\n                      {!!(e.Missile && e.Missile.Enemy === 1) && (\n                        <MissileTable missile={e.Missile} compact />\n                      )}\n                    </Col>\n                    <Col xs={24} md={12}>\n                      {dots.map((dot, i) => (\n                        <DotTable\n                          key={i}\n                          CardID={imgID}\n                          type=\"Enemy\"\n                          dot={dot}\n                        />\n                      ))}\n                    </Col>\n                  </Row>\n                </td>\n              </tr>\n            )}\n          </React.Fragment>\n        );\n      })}\n    </>\n  );\n};\n\ninterface EnemyTableProps {\n  data: {\n    Quest: QuestType;\n    QuestEventTexts: Array<{\n      Message: string;\n      Name: string;\n      FaceID: number;\n    }>;\n  };\n}\n\nconst EnemyTable: React.FC<EnemyTableProps> = ({ data }) => {\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 991px)' });\n  const { Quest: quest } = data;\n  const enemies = quest.Map.Enemies;\n  const entries = quest.Map.Entries[quest.EntryNo];\n  const routes = quest.Map.Routes;\n  const mapLevel = quest.Level;\n  const [showDuplicate, setShowDuplicate] = useState(false);\n  const [showTalk, setShowTalk] = useState(true);\n  const drops = [\n    quest.Treasure1,\n    quest.Treasure2,\n    quest.Treasure3,\n    quest.Treasure4,\n    quest.Treasure5,\n  ].map(\n    (treasure) =>\n      `${ICO_URL}/0/${\n        (treasure >= 1000 && treasure < 2000 ? '_' : '') + treasure\n      }.png`,\n  );\n  const parsedEnemies: Array<Array<Enemy & MapEntry> | MapEntry> = [];\n  const parseEnemy = (entry: MapEntry, enemyID: number = entry.EnemyID - 1) => {\n    const enemy = { ...enemies[enemyID], ...entry, EnemyID: enemyID };\n    if (!enemy.Level) {\n      enemy.Level = 100;\n    }\n    enemy.HP = (enemy.HP * mapLevel * enemy.Level) / 10000;\n    if (!enemy.ATTACK_RANGE) {\n      enemy.ATTACK_POWER =\n        (enemy.ATTACK_POWER * mapLevel * enemy.Level) / 10000;\n    }\n    return enemy;\n  };\n  for (const entry of entries) {\n    // ids between 0 and 1000 are true enemies\n    if (entry.EnemyID >= 0 && entry.EnemyID < 1000) {\n      const enemy = parseEnemy(entry);\n      const enemyGroup = [enemy];\n      if (\n        parsedEnemies.find(\n          (ea) =>\n            !showDuplicate &&\n            ea instanceof Array &&\n            ea[0].EnemyID === enemy.EnemyID,\n        )\n      ) {\n        continue;\n      }\n      if (enemy.Param_ChangeParam) {\n        while (enemyGroup[enemyGroup.length - 1].Param_ChangeParam) {\n          const changeFrom = enemyGroup[enemyGroup.length - 1];\n          const enemyID = changeFrom.Param_ChangeParam - 1;\n          if (enemyGroup.find((e) => e.EnemyID === enemyID)) {\n            break;\n          }\n          const newEnemy = parseEnemy(entry, enemyID);\n          enemyGroup.push(newEnemy);\n        }\n      }\n      parsedEnemies.push(enemyGroup);\n    } else {\n      parsedEnemies.push(entry);\n    }\n  }\n  return (\n    <table className={styles.table}>\n      <thead>\n        <tr>\n          <td colSpan={12}>\n            重复敌人\n            <Switch\n              checkedChildren=\"显示\"\n              unCheckedChildren=\"隐藏\"\n              checked={showDuplicate}\n              onChange={(value) => setShowDuplicate(value)}\n            />\n            <Divider type=\"vertical\" />\n            对话\n            <Switch\n              checkedChildren=\"显示\"\n              unCheckedChildren=\"隐藏\"\n              checked={showTalk}\n              onChange={(value) => setShowTalk(value)}\n            />\n          </td>\n        </tr>\n        <tr>\n          <th rowSpan={2} style={{ width: 100 }}>\n            点阵\n          </th>\n          {!isTabletOrMobile && <th rowSpan={2}>属性</th>}\n          <th>攻速</th>\n          <th rowSpan={2}>HP</th>\n          <th rowSpan={2}>攻击</th>\n          <th>防御</th>\n          <th rowSpan={2}>暗杀</th>\n          {!isTabletOrMobile && <th rowSpan={2}>掉落</th>}\n          {!isTabletOrMobile && <th rowSpan={2}>切换</th>}\n        </tr>\n        <tr>\n          <th>射程</th>\n          <th>魔抗</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {parsedEnemies.map((enemies, index) => {\n          if (enemies instanceof Array) {\n            return (\n              <EnemyTableRows\n                isTabletOrMobile={isTabletOrMobile}\n                enemies={enemies}\n                drops={drops}\n                key={index}\n                routes={routes}\n              />\n            );\n          } else if (enemies.EnemyID === -1) {\n            // wait\n            return null;\n          } else if (enemies.EnemyID === 2000) {\n            // exclution mark\n            return null;\n          } else if (enemies.EnemyID >= 1000 && enemies.EnemyID < 2000) {\n            // quest event text\n            return showTalk ? (\n              <TalkRow\n                key={`enemy-table-${index}`}\n                talk={data.QuestEventTexts[enemies.EnemyID - 1000]}\n                MissionID={quest.Mission.MissionID}\n                isTabletOrMobile={isTabletOrMobile}\n              />\n            ) : null;\n          } else if (enemies.EnemyID === 4201) {\n            // command, play se or call a event, etc\n            const command = enemies.EntryCommand;\n            const match = /CallEvent\\(([\\d,]+)\\)/.exec(command);\n            if (match) {\n              const list = match[1].split(',');\n              return list.map((s, index) => {\n                const recordIndex = Number.parseInt(s, 10);\n                const talk = quest.Mission.BattleTalkEvents.find(\n                  (e) => e.RecordIndex === recordIndex,\n                );\n                if (!talk) {\n                  return null;\n                }\n                return showTalk ? (\n                  <TalkRow\n                    key={`enemy-table-${index}-event-${recordIndex}`}\n                    MissionID={quest.Mission.MissionID}\n                    talk={talk}\n                    isTabletOrMobile={isTabletOrMobile}\n                  />\n                ) : null;\n              });\n            }\n            return (\n              <tr style={{ display: 'none' }} key={`enemy-table-${index}`}>\n                <td colSpan={14}>{enemies.EntryCommand}</td>\n              </tr>\n            );\n          }\n          return null;\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default EnemyTable;\n","import React from 'react';\nimport { Enemy } from 'interfaces';\nimport { ENEMY_DOT_URL } from 'consts';\n\nconst PreviewDot: React.FC<{ enemy: Enemy }> = ({ enemy }) => {\n  const imgID = (enemy.PatternID >> 8) % 4096;\n  const previewSprite = enemy.Dots[0].Entries[0].Sprites[0];\n  return (\n    <div>\n      <div\n        style={{\n          display: 'inline-block',\n          width: previewSprite.Width,\n          height: previewSprite.Height,\n          backgroundImage: `url(\"${ENEMY_DOT_URL}/${imgID}/sprite.png\")`,\n          backgroundPositionX: -previewSprite.X,\n          backgroundPositionY: -previewSprite.Y,\n          zoom: Math.min(40 / previewSprite.Height, 40 / previewSprite.Width),\n          verticalAlign: 'middle',\n        }}\n      />\n    </div>\n  );\n};\n\nexport default PreviewDot;\n","import React, { useRef, useEffect, useState } from 'react';\nimport { Quest } from 'interfaces';\nimport { MAP_IMAGE_URL, STATIC_URL } from 'consts';\nimport { Stage, Layer, Image, Circle, Arrow } from 'react-konva';\nimport useImage from 'use-image';\nimport styles from './Quest.module.less';\nimport { InputNumber, Select } from 'antd';\n\nconst MapTable: React.FC<{ quest: Quest }> = ({ quest }) => {\n  const [mapImg] = useImage(\n    quest.Map.Image\n      ? 'http://assets.millennium-war.net' + quest.Map.Image\n      : `${MAP_IMAGE_URL}/${quest.Map.MapName}.png`,\n  );\n  const [heartImg] = useImage(STATIC_URL + '/heart.png');\n  const [nearImg] = useImage(STATIC_URL + '/near.png');\n  const [farImg] = useImage(STATIC_URL + '/far.png');\n  const [zoom, setZoom] = useState(1);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [circle, setCircle] = useState<{\n    x?: number;\n    y?: number;\n    range?: number;\n  }>({});\n  const [routeNos, setRouteNos] = useState<number[]>([]);\n\n  useEffect(() => {\n    const resize = () => {\n      if (containerRef.current) {\n        setZoom(containerRef.current.offsetWidth / 960);\n      }\n    };\n    window.onresize = resize;\n    resize();\n    return () => {\n      window.onresize = null;\n    };\n  }, []);\n\n  // const routeNosAppend = [...routeNos];\n  // for (let i = 0; i < routeNosAppend.length; i++) {\n  //   const routes = quest.Map.Routes[routeNosAppend[i]];\n  //   for (const route of routes) {\n  //     if (route.RouteID !== 0 && !routeNosAppend.includes(route.RouteID)) {\n  //       routeNosAppend.push(route.RouteID);\n  //       break;\n  //     }\n  //   }\n  // }\n\n  return (\n    <>\n      <div\n        style={{\n          width: '100%',\n          height: 0,\n          paddingBottom: '66.67%',\n          overflow: 'hidden',\n        }}\n        ref={containerRef}\n      >\n        <Stage width={960} height={640} scaleX={zoom} scaleY={zoom}>\n          <Layer>\n            <Image image={mapImg} />\n            {mapImg && heartImg && nearImg && farImg && (\n              <>\n                <Image image={mapImg} />\n                {quest.Map.Locations[quest.LocationNo].map(\n                  (location, index) => {\n                    const img =\n                      location.ObjectID === 0\n                        ? heartImg\n                        : location.ObjectID < 300\n                        ? nearImg\n                        : farImg;\n                    if (location.ObjectID === 0) {\n                      return (\n                        <Image\n                          image={img}\n                          key={index}\n                          x={location.X - img.width / 2}\n                          y={location.Y - img.height / 2}\n                        />\n                      );\n                    }\n                    return (\n                      <Image\n                        onClick={() => {\n                          setCircle((c) => ({\n                            x: location.X,\n                            y: location.Y,\n                            range: c.range || 250,\n                          }));\n                        }}\n                        onTap={() => {\n                          setCircle((c) => ({\n                            x: location.X,\n                            y: location.Y,\n                            range: c.range || 250,\n                          }));\n                        }}\n                        onMouseEnter={() => {\n                          document.body.style.cursor = 'pointer';\n                        }}\n                        onMouseLeave={() => {\n                          document.body.style.cursor = 'default';\n                        }}\n                        image={img}\n                        key={index}\n                        x={location.X - img.width / 2}\n                        y={location.Y - img.height / 3}\n                      />\n                    );\n                  },\n                )}\n                {circle.range !== undefined &&\n                  circle.x !== undefined &&\n                  circle.y !== undefined && (\n                    <Circle\n                      radius={circle.range * 0.75}\n                      x={circle.x}\n                      y={circle.y}\n                      fill=\"rgba(0, 255, 0, 0.3)\"\n                      stroke=\"rgba(0, 255, 0, 0.5)\"\n                      onClick={() => setCircle({})}\n                      onTap={() => setCircle({})}\n                    />\n                  )}\n                {quest.Map.Routes.map((routes, index) => {\n                  if (!routeNos.includes(index)) {\n                    return null;\n                  }\n                  return (\n                    <React.Fragment key={index}>\n                      {routes.slice(1).map((route, i) => {\n                        return (\n                          <Arrow\n                            points={[\n                              routes[i].X,\n                              routes[i].Y,\n                              route.X,\n                              route.Y,\n                            ]}\n                            key={i}\n                            stroke=\"rgba(255, 255, 255, 0.7)\"\n                            fill=\"red\"\n                            strokeWidth={8}\n                          />\n                        );\n                      })}\n                    </React.Fragment>\n                  );\n                })}\n              </>\n            )}\n          </Layer>\n        </Stage>\n      </div>\n      <table className={styles.table}>\n        <tbody>\n          <tr>\n            <th>射程圈</th>\n            <td>\n              <InputNumber\n                min={0}\n                style={{ width: '100%' }}\n                value={circle.range}\n                onChange={(value) =>\n                  value &&\n                  value >= 0 &&\n                  setCircle((c) => ({ ...c, range: value && value }))\n                }\n                placeholder=\"点一下上图里的配置位\"\n              />\n            </td>\n          </tr>\n          <tr>\n            <th>路径</th>\n            <td>\n              <Select\n                mode=\"multiple\"\n                style={{ width: '100%' }}\n                value={routeNos}\n                onChange={(value: number[]) => setRouteNos(value)}\n                placeholder=\"选择路径\"\n              >\n                {quest.Map.Routes.map(\n                  (route, index) =>\n                    route && (\n                      <Select.Option key={index} value={index}>\n                        {index}\n                      </Select.Option>\n                    ),\n                )}\n              </Select>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default MapTable;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { QuestTermConfig } from 'interfaces';\nimport styles from './Quest.module.less';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { Input, message, Spin } from 'antd';\nimport classNames from 'classnames';\n\nconst QuestConfigTableRows: React.FC<{ config: QuestTermConfig }> = ({\n  config,\n}) => {\n  const [value, setValue] = useState(config.Comment || '');\n\n  const [setQuestConfigMeta, { loading, data }] = useMutation<{\n    QuestConfigMeta?: { TypeID: number; Comment: string };\n  }>(\n    gql`\n      mutation($TypeID: Int!, $Comment: String) {\n        QuestConfigMeta(TypeID: $TypeID, Comment: $Comment) {\n          TypeID\n          Comment\n        }\n      }\n    `,\n    {\n      onCompleted: d => {\n        setValue(d?.QuestConfigMeta?.Comment || '');\n      },\n    },\n  );\n\n  const [editing, setEditing] = useState(false);\n  const ref = useRef<Input>(null);\n\n  useEffect(() => {\n    if (editing && ref.current) {\n      ref.current.focus();\n    }\n  }, [editing]);\n\n  const handleSave = async () => {\n    await setQuestConfigMeta({\n      variables: { TypeID: config.Type_Influence, Comment: value },\n    });\n    message.success('修改成功');\n    setEditing(false);\n  };\n\n  return (\n    <tbody className={styles.configRowGroup}>\n      <tr className={styles.cover}>\n        <td\n          colSpan={8}\n          className={classNames({\n            [styles.blank]: !(data\n              ? data.QuestConfigMeta?.Comment\n              : config.Comment),\n          })}\n        >\n          {editing ? (\n            <Spin spinning={loading}>\n              <Input\n                size=\"small\"\n                ref={ref}\n                value={value}\n                onChange={e => setValue(e.target.value)}\n                onBlur={handleSave}\n                onPressEnter={handleSave}\n              />\n            </Spin>\n          ) : (\n            <div\n              className={classNames(styles.fakeInput, styles.small)}\n              onClick={() => setEditing(true)}\n            >\n              {data ? data.QuestConfigMeta?.Comment : config.Comment}\n            </div>\n          )}\n        </td>\n      </tr>\n      <tr>\n        <td>{config.Type_Influence}</td>\n        <td>{config.Data_Param1}</td>\n        <td>{config.Data_Param2}</td>\n        <td>{config.Data_Param3}</td>\n        <td>{config.Data_Param4}</td>\n      </tr>\n\n      {!!config.Data_Expression && (\n        <tr style={{ borderBottom: '2px solid #e8e8e8' }}>\n          <td colSpan={5}>{config.Data_Expression}</td>\n        </tr>\n      )}\n    </tbody>\n  );\n};\n\nconst QuestTermTable: React.FC<{ terms: QuestTermConfig[] }> = ({ terms }) => {\n  return (\n    <table\n      className={styles.table}\n      style={{\n        margin: -1,\n        width: 'calc(100% + 2px)',\n        tableLayout: 'fixed',\n        position: 'relative',\n      }}\n    >\n      <thead>\n        <tr>\n          <th>类型</th>\n          <th>p1</th>\n          <th>p2</th>\n          <th>p3</th>\n          <th>p4</th>\n        </tr>\n        <tr>\n          <th colSpan={5}>cmd</th>\n        </tr>\n      </thead>\n      {terms.map((term, index) => (\n        <QuestConfigTableRows key={index} config={term} />\n      ))}\n    </table>\n  );\n};\n\nexport default QuestTermTable;\n","import React, { useState } from 'react';\nimport gql from 'graphql-tag';\nimport { Layout, Row, Col, Tag, Icon, Button, Switch } from 'antd';\nimport { Link } from 'react-router-dom';\nimport useRouter from 'use-react-router';\nimport { ICO_URL } from 'consts';\nimport EnemyTable from './EnemyTable';\nimport styles from './Quest.module.less';\nimport Loading from 'Components/Loading';\nimport { useQuery } from '@apollo/react-hooks';\nimport { renderDescription } from 'utils';\nimport { MapEntry, Enemy } from 'interfaces';\nimport { DotFragment, EnemyFragment } from 'fragments';\nimport PreviewDot from './PreviewDot';\nimport MapTable from './MapTable';\nimport QuestTermTable from './QuestTermTable';\nimport { Quest as QuestType } from 'interfaces';\nimport TalkRow from 'Components/TalkRow';\n\nconst { Content } = Layout;\n\nconst Quest: React.FC = () => {\n  const { match } = useRouter<{ QuestID: string }>();\n  const QuestID = Number.parseInt(match.params.QuestID, 10);\n  const [showTerms, setShowTerms] = useState(false);\n  const [showHardTerms, setShowHardTerms] = useState(false);\n  const [showMissionTalks, setShowMissionTalks] = useState(false);\n\n  const { data, loading } = useQuery<{\n    Quest: QuestType;\n    QuestEventTexts: Array<{\n      Message: string;\n      Name: string;\n      FaceID: number;\n    }>;\n  }>(\n    gql`\n      fragment termConfig on QuestTermConfig {\n        Type_Influence\n        Data_Param1\n        Data_Param2\n        Data_Param3\n        Data_Param4\n        Data_Expression\n        Comment\n      }\n      query ($id: Int!) {\n        Quest(QuestID: $id) {\n          EventArcs {\n            _TalkerName\n            _TalkText\n          }\n          Name\n          HardInfomation\n          Message\n          Charisma\n          EntryNo\n          LocationNo\n          Level\n          ActionPoint\n          Treasure1\n          Treasure2\n          Treasure3\n          Treasure4\n          Treasure5\n          RankExp\n          Gold\n          Capacity\n          QuestTerms\n          _HardCondition\n          _HardLevel\n          QuestTermConfigs {\n            ...termConfig\n          }\n          QuestHardTermConfigs {\n            ...termConfig\n          }\n          Mission {\n            MissionID\n            BattleTalkEvents {\n              Message\n              Name\n              FaceID\n              RecordIndex\n            }\n          }\n          MapNo\n          Map {\n            MapName\n            Image\n            Entries {\n              EnemyID\n              Wait\n              RouteNo\n              Loop\n              Level\n              PrizeEnemySpawnPercent\n              PrizeCardID\n              PrizeEnemyDropPercent\n              RouteOffset\n              IsAppear\n              FreeCommand\n              EntryCommand\n              DeadCommand\n            }\n            Routes {\n              X\n              Y\n              RouteID\n              JumpPoint\n              WarpDelay\n              WaitTime\n              OnEvent\n            }\n            Locations {\n              ObjectID\n              X\n              Y\n              _Command\n            }\n            Enemies {\n              ...enemy\n            }\n          }\n        }\n        QuestEventTexts {\n          Message\n          Name\n          FaceID\n        }\n      }\n      ${DotFragment}\n      ${EnemyFragment}\n    `,\n    { variables: { id: QuestID } },\n  );\n\n  const dropper: Array<Array<Enemy & MapEntry>> = [[], [], [], [], []];\n  let enemiesCount = 0;\n  if (data) {\n    const enemies = data.Quest.Map.Enemies;\n    const entries = data.Quest.Map.Entries[data.Quest.EntryNo];\n    for (const entry of entries) {\n      if (entry.EnemyID >= 0 && entry.EnemyID < 1000) {\n        enemiesCount += entry.Loop;\n        if (entry.PrizeCardID !== 0) {\n          dropper[entry.PrizeCardID - 1].push({\n            ...enemies[entry.EnemyID - 1],\n            ...entry,\n            Loop: enemiesCount,\n          });\n        }\n      }\n    }\n  }\n\n  const haveDrop = dropper\n    .map((drop) => drop.length !== 0)\n    .reduce((prev, curr) => prev || curr);\n\n  return (\n    <Content className={styles.questContainer}>\n      {loading && <Loading />}\n      {data && data.Quest && (\n        <div>\n          <h1 className={styles.questTitle}>\n            <Link to={`/quest/${QuestID - 1}`}>\n              <Icon type=\"left\" />\n            </Link>\n            {data.Quest.Name}\n            <Link to={`/quest/${QuestID + 1}`}>\n              <Icon type=\"right\" />\n            </Link>\n          </h1>\n          <div>\n            {data.Quest.Charisma ? (\n              <Tag color=\"green\">\n                魅力：\n                {data.Quest.Charisma}\n              </Tag>\n            ) : null}\n            {data.Quest.ActionPoint ? (\n              <Tag color=\"red\">\n                体力：\n                {data.Quest.ActionPoint}\n              </Tag>\n            ) : null}\n          </div>\n          <Row gutter={8} className={styles.questInfo}>\n            <Col md={12} sm={24}>\n              <MapTable quest={data.Quest} />\n            </Col>\n            <Col md={12} sm={24}>\n              <table className={styles.table} style={{ margin: 0 }}>\n                <tbody>\n                  <tr>\n                    <td colSpan={4}>\n                      <div\n                        dangerouslySetInnerHTML={{\n                          __html: renderDescription(data.Quest.Message),\n                        }}\n                        style={{\n                          textAlign: 'left',\n                          maxWidth: '20em',\n                          margin: 'auto',\n                        }}\n                      />\n                    </td>\n                  </tr>\n                  <tr>\n                    <th>经验</th>\n                    <td>{data.Quest.RankExp}</td>\n                    <th>钱</th>\n                    <td>{data.Quest.Gold}</td>\n                  </tr>\n                  <tr>\n                    <th>心数</th>\n                    <td>{data.Quest.Capacity}</td>\n                    <th>怪数</th>\n                    <td>{enemiesCount}</td>\n                  </tr>\n                  <tr>\n                    <th>补正</th>\n                    <td>{data.Quest.Level}</td>\n                    <th>设置</th>\n                    <td>\n                      {data.Quest.QuestTerms !== 0 && (\n                        <Button\n                          type=\"primary\"\n                          size=\"small\"\n                          onClick={() => setShowTerms(!showTerms)}\n                          icon={showTerms ? 'up' : 'down'}\n                        />\n                      )}\n                    </td>\n                  </tr>\n                  {showTerms && (\n                    <tr>\n                      <td colSpan={4} style={{ padding: 0 }}>\n                        <QuestTermTable terms={data.Quest.QuestTermConfigs} />\n                      </td>\n                    </tr>\n                  )}\n                  {data.Quest._HardCondition !== 0 && (\n                    <>\n                      <tr>\n                        <td colSpan={4}>\n                          <div\n                            dangerouslySetInnerHTML={{\n                              __html: renderDescription(\n                                // TODO: delete ||\n                                data.Quest.HardInfomation || '',\n                              ),\n                            }}\n                            style={{\n                              textAlign: 'left',\n                              maxWidth: '20em',\n                              margin: 'auto',\n                            }}\n                          />\n                        </td>\n                      </tr>\n                      <tr>\n                        <th>4☆补正</th>\n                        <td>{data.Quest._HardLevel}</td>\n                        <th>设置</th>\n                        <td>\n                          <Button\n                            type=\"primary\"\n                            size=\"small\"\n                            onClick={() => setShowHardTerms(!showHardTerms)}\n                            icon={showHardTerms ? 'up' : 'down'}\n                          />\n                        </td>\n                      </tr>\n                    </>\n                  )}\n                  {showHardTerms && (\n                    <tr>\n                      <td colSpan={4} style={{ padding: 0 }}>\n                        <QuestTermTable\n                          terms={data.Quest.QuestHardTermConfigs}\n                        />\n                      </td>\n                    </tr>\n                  )}\n                  {haveDrop && (\n                    <tr>\n                      <td colSpan={4}>\n                        <table>\n                          <tbody>\n                            <tr>\n                              {dropper.map((_, index) => {\n                                const treasure: number = (data.Quest as any)[\n                                  `Treasure${index + 1}`\n                                ];\n                                return (\n                                  <td style={{ width: '20%' }} key={index}>\n                                    {treasure ? (\n                                      <div>\n                                        <img\n                                          alt={treasure.toString()}\n                                          style={{ width: '100%' }}\n                                          src={`${ICO_URL}/0/${\n                                            (treasure >= 1000 && treasure < 2000\n                                              ? '_'\n                                              : '') + treasure\n                                          }.png`}\n                                        />\n                                        {dropper[4].length === 0 &&\n                                          index === 4 && (\n                                            <Tag\n                                              color=\"red\"\n                                              style={{ margin: 0 }}\n                                            >\n                                              COM\n                                            </Tag>\n                                          )}\n                                      </div>\n                                    ) : null}\n                                  </td>\n                                );\n                              })}\n                            </tr>\n                            <tr>\n                              {dropper.map((drops, index) => (\n                                <td key={index}>\n                                  {drops.map((drop, i) => {\n                                    return (\n                                      <div key={i}>\n                                        <PreviewDot enemy={drop} />#{drop.Loop}\n                                      </div>\n                                    );\n                                  })}\n                                </td>\n                              ))}\n                            </tr>\n                          </tbody>\n                        </table>\n                      </td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            </Col>\n          </Row>\n          {data && <EnemyTable data={data} />}\n          {data && data.Quest.EventArcs && data.Quest.EventArcs.length !== 0 && (\n            <div>\n              <h2>过场对话</h2>\n              <table className={styles.table}>\n                <tbody>\n                  {data.Quest.EventArcs.map((arc, index) => (\n                    <tr key={index}>\n                      <th>{arc._TalkerName}</th>\n                      <td>\n                        <div\n                          dangerouslySetInnerHTML={{\n                            __html: renderDescription(arc._TalkText),\n                          }}\n                          style={{\n                            margin: 'auto',\n                            maxWidth: '30em',\n                            textAlign: 'left',\n                          }}\n                        />\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          )}\n          {data && data.Quest.Mission.BattleTalkEvents?.length !== 0 && (\n            <div>\n              <h2>\n                Mission对话&nbsp;\n                <Switch\n                  checkedChildren=\"显示\"\n                  unCheckedChildren=\"折叠\"\n                  checked={showMissionTalks}\n                  onChange={(value) => setShowMissionTalks(value)}\n                />\n              </h2>\n              {showMissionTalks && (\n                <table className={styles.table}>\n                  <colgroup style={{ width: 100 }} />\n                  <tbody>\n                    {data.Quest.Mission.BattleTalkEvents.map((talk, index) => (\n                      <TalkRow\n                        key={index}\n                        talk={talk}\n                        MissionID={data.Quest.Mission.MissionID}\n                        isTabletOrMobile={false}\n                      />\n                    ))}\n                  </tbody>\n                </table>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n    </Content>\n  );\n};\n\nexport default Quest;\n","import React from 'react';\nimport { Layout, Collapse, Drawer, Menu } from 'antd';\nimport gql from 'graphql-tag';\nimport _ from 'lodash';\nimport { MISSION_TYPE } from './types';\nimport MissionShutter from './MissionShutter';\nimport useRouter from 'use-react-router';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useMediaQuery } from 'react-responsive';\nimport Quest from '../Quest';\nimport Loading from 'Components/Loading';\nimport styles from './QuestList.module.less';\nimport { useState } from 'react';\n\nconst { Content, Sider } = Layout;\nconst Panel = Collapse.Panel;\n\nconst QuestList: React.FC = () => {\n  const { match, history } = useRouter<{ QuestID: string }>();\n  const { QuestID } = match.params;\n\n  const [currentMissionType, setCurrentMissionType] = useState('Emergency');\n\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 991px)' });\n\n  const { loading, data } = useQuery<{\n    Missions: Array<{\n      Name: string;\n      Type: string;\n      MissionID: number;\n    }>;\n  }>(\n    gql`\n      query {\n        Missions {\n          Name\n          Type\n          MissionID\n        }\n      }\n    `,\n  );\n\n  const missions = data ? Object.entries(_.groupBy(data.Missions, 'Type')) : [];\n\n  return (\n    <Layout style={{ position: 'relative', overflow: 'hidden' }}>\n      <Sider theme=\"light\" className={styles.sider}>\n        {loading ? (\n          <Loading />\n        ) : (\n          <Menu\n            theme=\"light\"\n            selectedKeys={[currentMissionType]}\n            onSelect={p => setCurrentMissionType(p.key)}\n            style={{ border: 'none' }}\n          >\n            {missions.map(([key]) => (\n              <Menu.Item key={key}>{MISSION_TYPE[key]}</Menu.Item>\n            ))}\n          </Menu>\n        )}\n      </Sider>\n      <Content style={{ position: 'relative' }}>\n        <div\n          style={{\n            height: '100%',\n            overflow: 'auto',\n          }}\n        >\n          <Content className={styles.missionListContent}>\n            {!loading ? (\n              <Collapse bordered={false}>\n                {missions\n                  .find(m => m[0] === currentMissionType)![1]\n                  .map(mission => {\n                    return (\n                      <Panel\n                        key={mission.MissionID}\n                        header={\n                          <span>\n                            {mission.MissionID}\n                            &nbsp;\n                            <strong>{mission.Name}</strong>\n                          </span>\n                        }\n                      >\n                        <MissionShutter\n                          mission={mission}\n                          isTabletOrMobile={isTabletOrMobile}\n                        />\n                      </Panel>\n                    );\n                  })}\n              </Collapse>\n            ) : (\n              <Loading />\n            )}\n          </Content>\n        </div>\n      </Content>\n      <Drawer\n        width={isTabletOrMobile ? '100%' : '80%'}\n        visible={!!QuestID}\n        destroyOnClose\n        onClose={() => history.push('/quest')}\n        getContainer={false}\n        style={{ position: 'absolute' }}\n      >\n        {QuestID && <Quest />}\n      </Drawer>\n    </Layout>\n  );\n};\n\nexport default QuestList;\n","import React, { useState } from 'react';\nimport { Layout, Spin, Pagination, Input } from 'antd';\n\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { ClassData } from 'interfaces';\nimport ClassTable from 'Components/ClassTable';\nimport { MissileFragment } from 'fragments';\n\nconst { Content } = Layout;\n\nconst ClassList: React.FC = () => {\n  const [search, setSearch] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const handleSetSearch = (value: string) => {\n    setSearch(value);\n    setCurrentPage(1);\n  };\n\n  const classFilter = (unitClass: any) => {\n    return JSON.stringify(unitClass).includes(search);\n  };\n\n  const { data, loading, refetch } = useQuery<{ Classes: ClassData[] }>(gql`\n    query {\n      Classes {\n        AttackAttribute\n        Missile {\n          ...missile\n        }\n        ClassID\n        Name\n        Explanation\n        JobChange\n        JobChangeMaterial1\n        JobChangeMaterial2\n        JobChangeMaterial3\n        Data_ExtraAwakeOrb1\n        Data_ExtraAwakeOrb2\n        AwakeType1\n        AwakeType2\n        AttackWait\n        NickNames\n        ClassAbilityConfigs {\n          _InvokeType\n          _TargetType\n          _InfluenceType\n          _Param1\n          _Param2\n          _Param3\n          _Param4\n          _Command\n          _ActivateCommand\n          Comment\n        }\n        ClassAbilityPower1\n        Cards {\n          CardID\n          Name\n          Rare\n        }\n      }\n    }\n    ${MissileFragment}\n  `);\n\n  return (\n    <Content className=\"container\">\n      <Spin spinning={loading}>\n        <Input\n          placeholder=\"搜索职业\"\n          value={search}\n          onChange={event => {\n            handleSetSearch(event.target.value);\n          }}\n        />\n        {data &&\n          data.Classes &&\n          data.Classes.filter(classFilter)\n            .sort((c1, c2) => c1.ClassID - c2.ClassID)\n            .slice(50 * (currentPage - 1), 50 * currentPage)\n            .map(unitClass => {\n              return (\n                <ClassTable\n                  key={unitClass.ClassID}\n                  classData={unitClass}\n                  onCompleted={refetch}\n                />\n              );\n            })}\n        {data && data.Classes && (\n          <Pagination\n            defaultCurrent={1}\n            defaultPageSize={50}\n            current={currentPage}\n            onChange={page => setCurrentPage(page)}\n            total={data.Classes.filter(classFilter).length}\n          />\n        )}\n      </Spin>\n    </Content>\n  );\n};\n\nexport default ClassList;\n","import React, { useState } from 'react';\nimport { Layout, Pagination, Input } from 'antd';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { SkillData } from 'interfaces';\nimport SkillTable from 'Components/SkillTable';\nimport Loading from 'Components/Loading';\n\nconst { Content } = Layout;\n\ninterface Data {\n  Skills: SkillData[];\n}\n\nconst SkillList: React.FC = () => {\n  const [search, setSearch] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const handleSetSearch = (search: string) => {\n    setSearch(search);\n    setCurrentPage(1);\n  };\n\n  const skillFilter = (skill: any) => {\n    return !search || JSON.stringify(skill).includes(search);\n  };\n\n  const { data, loading } = useQuery<Data>(gql`\n    query {\n      Skills {\n        SkillID\n        SkillName\n        WaitTime\n        ContTimeMax\n        PowerMax\n        LevelMax\n        Text\n        Configs {\n          Type_Collision\n          Type_CollisionState\n          Type_ChangeFunction\n          Data_Target\n          Data_InfluenceType\n          Data_MulValue\n          Data_MulValue2\n          Data_MulValue3\n          Data_AddValue\n          _HoldRatioUpperLimit\n          _Expression\n          _ExpressionActivate\n          Comment\n        }\n        Cards {\n          CardID\n          Name\n          Rare\n        }\n      }\n    }\n  `);\n\n  return (\n    <Content className=\"container\">\n      <Loading spinning={loading}>\n        <Input\n          placeholder=\"搜索技能\"\n          value={search}\n          onChange={event => {\n            handleSetSearch(event.target.value);\n          }}\n        />\n        {data &&\n          data.Skills &&\n          data.Skills.filter(skillFilter)\n            .slice(50 * (currentPage - 1), 50 * currentPage)\n            .map((skill, index) => <SkillTable skills={[skill]} key={index} />)}\n        {data && data.Skills && (\n          <Pagination\n            defaultCurrent={1}\n            defaultPageSize={50}\n            current={currentPage}\n            onChange={page => setCurrentPage(page)}\n            total={data.Skills.filter(skillFilter).length}\n          />\n        )}\n      </Loading>\n    </Content>\n  );\n};\n\nexport default SkillList;\n","import React, { useState } from 'react';\nimport { Spin, Layout, Pagination, Input } from 'antd';\nimport gql from 'graphql-tag';\nimport { AbilityData } from 'interfaces';\nimport { useQuery } from '@apollo/react-hooks';\nimport AbilityTable from 'Components/AbilityTable';\n\nconst { Content } = Layout;\n\nconst AbilityList: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [search, setSearch] = useState('');\n\n  const handleSetSearch = (search: string) => {\n    setSearch(search);\n    setCurrentPage(1);\n  };\n\n  const abilityFilter = (ability: AbilityData) => {\n    return !search || (search && JSON.stringify(ability).includes(search));\n  };\n\n  const { data, loading } = useQuery<{ Abilities: AbilityData[] }>(gql`\n    query {\n      Abilities {\n        AbilityID\n        Text\n        AbilityName\n        Configs {\n          _InvokeType\n          _TargetType\n          _InfluenceType\n          _Param1\n          _Param2\n          _Param3\n          _Param4\n          _Command\n          _ActivateCommand\n          Comment\n        }\n        Cards {\n          CardID\n          Name\n          Rare\n        }\n      }\n    }\n  `);\n\n  return (\n    <Content className=\"container\">\n      <Spin spinning={loading}>\n        <Input\n          placeholder=\"搜索被动\"\n          value={search}\n          onChange={event => {\n            handleSetSearch(event.target.value);\n          }}\n        />\n        {data &&\n          data.Abilities &&\n          data.Abilities.filter(abilityFilter)\n            .slice(50 * (currentPage - 1), 50 * currentPage)\n            .map((ability, index) => {\n              return <AbilityTable ability={ability} key={index} />;\n            })}\n        {data && data.Abilities && (\n          <Pagination\n            defaultCurrent={1}\n            defaultPageSize={50}\n            current={currentPage}\n            onChange={page => setCurrentPage(page)}\n            total={data.Abilities.filter(abilityFilter).length}\n          />\n        )}\n      </Spin>\n    </Content>\n  );\n};\n\nexport default AbilityList;\n","import * as React from 'react';\nimport {\n  Layout,\n  Row,\n  Col,\n  Spin,\n  Icon,\n  Popconfirm,\n  Drawer,\n  Tag,\n  Modal,\n} from 'antd';\nimport { Query, Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport classNames from 'classnames';\nimport styles from './index.module.less';\nimport { EMOJI_URL } from '../../../consts';\n\nconst { Content } = Layout;\n\ninterface Data {\n  emojis: Array<{\n    _id: string;\n    emoji: string;\n    name: string;\n    group: number[];\n  }>;\n}\n\ninterface EmojiListStates {\n  drawerVisible: boolean;\n  currentEmoji: {\n    _id: string;\n    name: string[];\n    emoji: string[];\n    group: number[];\n  };\n  modalVisible: boolean;\n  currentImage: string;\n}\nexport default class EmojiList extends React.Component<any, EmojiListStates> {\n  public state: EmojiListStates = {\n    drawerVisible: false,\n    currentEmoji: {\n      _id: '',\n      name: [],\n      emoji: [],\n      group: [],\n    },\n    modalVisible: false,\n    currentImage: '',\n  };\n\n  public isImg = (img: string) => {\n    const [, ext] = img.split('.');\n    if (['jpg', 'jpeg', 'png', 'gif', 'bmp'].indexOf(ext) !== -1) {\n      return true;\n    }\n    return false;\n  };\n\n  public render() {\n    return (\n      <Query<Data>\n        query={gql`\n          query {\n            emojis {\n              _id\n              emoji\n              name\n              group\n            }\n          }\n        `}\n      >\n        {({ loading, error, data, refetch }) => (\n          <Content className=\"container\">\n            <Spin spinning={loading}>\n              <Row className=\"sorter-block\">\n                <Col span={2}>#</Col>\n                <Col span={7}>名称</Col>\n                <Col span={9}>存在的群</Col>\n                <Col span={6}>数量</Col>\n              </Row>\n            </Spin>\n            {data &&\n              data.emojis &&\n              data.emojis.map((emoji: any, index: number) => (\n                <Row\n                  className=\"list-card\"\n                  key={emoji._id}\n                  onClick={() => {\n                    this.setState({ drawerVisible: true, currentEmoji: emoji });\n                  }}\n                >\n                  <Col span={2}>{index + 1}</Col>\n                  <Col span={7} className=\"important\">\n                    {emoji.name.join(', ')}\n                  </Col>\n                  <Col span={9}>{emoji.group.join(', ')}</Col>\n                  <Col span={6}>{emoji.emoji && emoji.emoji.length}</Col>\n                  <div\n                    className={classNames(\n                      'list-card-addon',\n                      styles.deleteIconContainer,\n                    )}\n                    onClick={e => {\n                      e.stopPropagation();\n                    }}\n                  >\n                    <Mutation\n                      mutation={gql`\n                        mutation removeEmoji($ID: String!) {\n                          removeEmoji(ID: $ID)\n                        }\n                      `}\n                    >\n                      {(removeEmoji: any, { data }: any) => (\n                        <Popconfirm\n                          title=\"是否要删除这个emoji？\"\n                          onConfirm={() => {\n                            removeEmoji({\n                              variables: {\n                                ID: emoji._id,\n                              },\n                            }).then(() => {\n                              refetch();\n                            });\n                          }}\n                        >\n                          <Icon\n                            className={styles.deleteIcon}\n                            type=\"delete\"\n                            theme=\"outlined\"\n                          />\n                        </Popconfirm>\n                      )}\n                    </Mutation>\n                  </div>\n                </Row>\n              ))}\n            <Drawer\n              width={'70%'}\n              className={styles.emojiDrawer}\n              title=\"emojij详情\"\n              onClose={() => this.setState({ drawerVisible: false })}\n              visible={this.state.drawerVisible}\n            >\n              <div style={{ marginBottom: 10 }}>\n                <span className=\"label\">名称:</span>\n                {this.state.currentEmoji.name.map(name => (\n                  <Tag key={name} color=\"blue\">\n                    {name}\n                  </Tag>\n                ))}\n              </div>\n              <div style={{ marginBottom: 10 }}>\n                <span className=\"label\">分组:</span>\n                {this.state.currentEmoji.group.map(group => (\n                  <Tag key={group} color=\"blue\">\n                    {group}\n                  </Tag>\n                ))}\n              </div>\n              <div className={styles.imageContainer}>\n                {this.state.currentEmoji.emoji.map(\n                  (emoji: any, index: number) => {\n                    return (\n                      <div key={emoji} className={styles.imageBox}>\n                        <div className={styles.imageCover}>\n                          <div className={styles.imageActionContainer}>\n                            <Icon\n                              className={styles.imageAction}\n                              type=\"eye\"\n                              theme=\"outlined\"\n                              onClick={() => {\n                                this.setState({\n                                  modalVisible: true,\n                                  currentImage: emoji,\n                                });\n                              }}\n                            />\n                            <Mutation\n                              mutation={gql`\n                                mutation removeEmojiItem(\n                                  $ID: String!\n                                  $index: Int!\n                                ) {\n                                  removeEmojiItem(ID: $ID, index: $index)\n                                }\n                              `}\n                            >\n                              {(removeEmojiItem: any) => {\n                                return (\n                                  <Popconfirm\n                                    title=\"是否要删除这个emoji？\"\n                                    onConfirm={() => {\n                                      removeEmojiItem({\n                                        variables: {\n                                          ID: this.state.currentEmoji._id,\n                                          index,\n                                        },\n                                      }).then((data: any) => {\n                                        if (data && data.data.removeEmojiItem) {\n                                          refetch();\n                                          this.setState(({ currentEmoji }) => ({\n                                            currentEmoji: {\n                                              ...currentEmoji,\n                                              emoji: [\n                                                ...currentEmoji.emoji.slice(\n                                                  0,\n                                                  index,\n                                                ),\n                                                ...currentEmoji.emoji.slice(\n                                                  index + 1,\n                                                ),\n                                              ],\n                                            },\n                                          }));\n                                        }\n                                      });\n                                    }}\n                                  >\n                                    <Icon\n                                      className={styles.imageAction}\n                                      type=\"delete\"\n                                      theme=\"outlined\"\n                                    />\n                                  </Popconfirm>\n                                );\n                              }}\n                            </Mutation>\n                          </div>\n                        </div>\n                        {this.isImg(emoji) ? (\n                          <img alt={emoji} src={`${EMOJI_URL}/${emoji}`} />\n                        ) : (\n                          <span>{emoji}</span>\n                        )}\n                      </div>\n                    );\n                  },\n                )}\n              </div>\n            </Drawer>\n            <Modal\n              onCancel={() => this.setState({ modalVisible: false })}\n              visible={this.state.modalVisible}\n              footer={null}\n              style={{ textAlign: 'center' }}\n            >\n              {this.isImg(this.state.currentImage) ? (\n                <img\n                  alt={this.state.currentImage}\n                  src={`${EMOJI_URL}/${this.state.currentImage}`}\n                />\n              ) : (\n                <span>{this.state.currentImage}</span>\n              )}\n            </Modal>\n          </Content>\n        )}\n      </Query>\n    );\n  }\n}\n","import React from 'react';\nimport { Layout, Input, Form, Button, Icon } from 'antd';\nimport useForm from 'rc-form-hooks';\nimport UserContext from '../../../context/UserContext';\nimport styles from './Login.module.less';\n\nconst { Content } = Layout;\n\nconst Login: React.FC = () => {\n  const { getFieldDecorator, validateFields } = useForm<{ token: string }>();\n  const { login } = UserContext.useContainer();\n  const handleLogin = async () => {\n    const values = await validateFields();\n    login(values.token);\n  };\n  return (\n    <Content>\n      <Form className={styles.loginForm}>\n        <Form.Item>\n          {getFieldDecorator('token')(\n            <Input\n              type=\"password\"\n              prefix={\n                <Icon\n                  onClick={handleLogin}\n                  style={{ cursor: 'default' }}\n                  type=\"lock\"\n                />\n              }\n            />,\n          )}\n        </Form.Item>\n        <Button type=\"primary\" block>\n          登录\n        </Button>\n      </Form>\n    </Content>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport MissileTable from 'Components/MissileTable';\nimport { Layout } from 'antd';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { MissileFragment } from 'fragments';\nimport Loading from 'Components/Loading';\nimport { Missile } from 'interfaces';\n\nconst { Content } = Layout;\n\nconst MissileList: React.FC = () => {\n  const { data, loading } = useQuery<{ Missiles: Missile[] }>(gql`\n    query {\n      Missiles {\n        ...missile\n      }\n    }\n    ${MissileFragment}\n  `);\n  return (\n    <Content className=\"container\">\n      <Loading spinning={loading}>\n        {data &&\n          data.Missiles.map((missile, index) => (\n            <MissileTable missile={missile} key={index} />\n          ))}\n      </Loading>\n    </Content>\n  );\n};\n\nexport default MissileList;\n","import React from 'react';\nimport { Layout } from 'antd';\nimport {\n  withRouter,\n  Switch,\n  Route,\n  RouteComponentProps,\n  Redirect,\n} from 'react-router-dom';\nimport UserContext from '../context/UserContext';\nimport Header from './Header';\n\nimport Home from './Routes/Home';\nimport UnitList from './Routes/UnitList';\nimport QuestList from './Routes/QuestList';\nimport ClassList from './Routes/ClassList';\nimport SkillList from './Routes/SkillList';\nimport AbilityList from './Routes/AbilityList';\nimport EmojiList from './Routes/EmojiList';\nimport Login from './Routes/Login';\nimport MissileList from './Routes/MissileList';\n\nconst Router: React.FC<RouteComponentProps> = () => {\n  const { isLoggedIn } = UserContext.useContainer();\n\n  return !isLoggedIn ? (\n    <Switch>\n      <Route path=\"/\" exact component={Login} />\n      <Redirect to=\"/\" />\n    </Switch>\n  ) : (\n    <Layout>\n      <Header />\n      <Switch>\n        <Route path=\"/unit/:CardID\" component={UnitList} />\n        <Route path=\"/quest/:QuestID\" component={QuestList} />\n        <Route path=\"/unit\" exact component={UnitList} />\n        <Route path=\"/quest\" exact component={QuestList} />\n        <Route path=\"/class\" exact component={ClassList} />\n        <Route path=\"/skill\" exact component={SkillList} />\n        <Route path=\"/ability\" exact component={AbilityList} />\n        <Route path=\"/missile\" exact component={MissileList} />\n        <Route path=\"/emoji\" exact component={EmojiList} />\n        <Route component={Home} />\n      </Switch>\n    </Layout>\n  );\n};\n\nexport default withRouter(Router);\n","import { Layout } from 'antd';\nimport * as React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { ConfigProvider } from 'antd';\nimport zhCN from 'antd/lib/locale-provider/zh_CN';\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\nimport './App.less';\nimport UserContext from './context/UserContext';\nimport MediaContext from './context/MediaContext';\nimport Router from './Components/Router';\nimport { API_URL } from './consts';\n\nmoment.locale('zh-cn');\n\nconst client = new ApolloClient({\n  uri: API_URL,\n});\n\nclass App extends React.Component {\n  public render() {\n    return (\n      <HashRouter>\n        <ConfigProvider locale={zhCN}>\n          <ApolloProvider client={client}>\n            <UserContext.Provider>\n              <MediaContext.Provider>\n                <Layout className=\"App\" style={{ height: '100%' }}>\n                  <Router />\n                </Layout>\n              </MediaContext.Provider>\n            </UserContext.Provider>\n          </ApolloProvider>\n        </ConfigProvider>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.less';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root') as HTMLElement);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"unitRaritySider\":\"unitRaritySider--2gItA\",\"unitRarityMenu\":\"unitRarityMenu--8Qf5n\",\"unitListContent\":\"unitListContent--36QQ2\",\"sider\":\"sider--2tJQ0\",\"filterContainer\":\"filterContainer--2VKib\",\"sorterBlock\":\"sorterBlock--KBZMT\",\"shadow\":\"shadow--1W6Jm\",\"listContainer\":\"listContainer--1bWDn\",\"listCard\":\"listCard--1Bay0\",\"male\":\"male--3nLop\",\"female\":\"female--29QGQ\",\"disable\":\"disable--qpu_p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"table--1QcJH\",\"th\":\"th--3CrBB\",\"compact\":\"compact--3SGrW\",\"fakeInput\":\"fakeInput--3aD2y\",\"small\":\"small--1VTBK\",\"configRowGroup\":\"configRowGroup--d5o5P\",\"cover\":\"cover--13igz\",\"blank\":\"blank--2JweT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteIconContainer\":\"deleteIconContainer--Ka13J\",\"deleteIcon\":\"deleteIcon--396xM\",\"imageContainer\":\"imageContainer--chkYQ\",\"imageBox\":\"imageBox--10DU5\",\"imageCover\":\"imageCover--NtOwb\",\"imageActionContainer\":\"imageActionContainer--rumP3\",\"imageAction\":\"imageAction--2P1vd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"table--1DsAt\",\"th\":\"th--3vyLs\",\"compact\":\"compact--2S6H2\",\"fakeInput\":\"fakeInput--jubeu\",\"small\":\"small--1dBT3\",\"configRowGroup\":\"configRowGroup--apZj4\",\"cover\":\"cover--9KBzK\",\"blank\":\"blank--2HgyH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"table--IF6EY\",\"th\":\"th--iDq9c\",\"compact\":\"compact--RLpAq\",\"fakeInput\":\"fakeInput--1xECD\",\"small\":\"small--37kJo\",\"configRowGroup\":\"configRowGroup--3kYfU\",\"cover\":\"cover--2NLeO\",\"blank\":\"blank--10o5W\"};"],"sourceRoot":""}